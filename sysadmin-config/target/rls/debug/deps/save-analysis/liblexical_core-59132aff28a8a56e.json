{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7","program":"/Users/imac/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","lexical_core","/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"arrayvec\"","--cfg","feature=\"correct\"","--cfg","feature=\"default\"","--cfg","feature=\"ryu\"","--cfg","feature=\"static_assertions\"","--cfg","feature=\"std\"","--cfg","feature=\"table\"","-C","metadata=59132aff28a8a56e","-C","extra-filename=-59132aff28a8a56e","--out-dir","/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps","-L","dependency=/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps","--extern","arrayvec=/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps/libarrayvec-db39f4e4a4dff51f.rmeta","--extern","bitflags=/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps/libbitflags-41ac0ef673a4918e.rmeta","--extern","cfg_if=/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps/libcfg_if-7999a9ce4a525d21.rmeta","--extern","ryu=/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps/libryu-11d6bc9c2118306e.rmeta","--extern","static_assertions=/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps/libstatic_assertions-c005b531aee43a98.rmeta","--cap-lints","allow","--cfg","has_range_bounds","--cfg","has_slice_index","--cfg","has_full_range_inclusive","--cfg","has_const_index","--cfg","has_i128","--cfg","has_ops_bound","--cfg","has_pointer_methods","--cfg","has_range_inclusive","--cfg","limb_width_64","--error-format=json","--sysroot","/Users/imac/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/imac/Desktop/rust/adminsystem/sysadmin/sysadmin-config/target/rls/debug/deps/liblexical_core-59132aff28a8a56e.rmeta"},"prelude":{"crate_id":{"name":"lexical_core","disambiguator":[18103062241430212594,13769431054985707361]},"crate_root":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src","external_crates":[{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":15,"id":{"name":"bitflags","disambiguator":[14378487901929975915,17805798331157665993]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[7091179115996047316,4033900210145493376]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":17,"id":{"name":"static_assertions","disambiguator":[4304855915434565948,843910242587082416]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":18,"id":{"name":"arrayvec","disambiguator":[10426064089246575078,17663085289985157434]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":19,"id":{"name":"nodrop","disambiguator":[13967956184530043830,10223672779965776450]}},{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","num":20,"id":{"name":"ryu","disambiguator":[4384738754916539769,17160691126448917209]}}],"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":0,"byte_end":20692,"line_start":1,"line_end":570,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8241,"byte_end":8242,"line_start":189,"line_end":189,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"ToLexical, FromLexicalLossy, FromLexical, Result","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":0,"byte_end":20692,"line_start":1,"line_end":570,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":802},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":539},{"krate":0,"index":658},{"krate":0,"index":690},{"krate":0,"index":764},{"krate":0,"index":772},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800}],"decl_id":null,"docs":" Fast lexical conversion routines for a no_std environment.","sig":null,"attributes":[{"value":"! Fast lexical conversion routines for a no_std environment.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":63,"byte_end":66,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! lexical-core is a low-level API for number-to-string and","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":67,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"! string-to-number conversions, without requiring a system","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":128,"byte_end":188,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"! allocator. If you would like to use a convenient, high-level","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":189,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"! API, please look at [lexical](https://crates.io/crates/lexical)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":254,"byte_end":321,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"! instead.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":322,"byte_end":334,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":335,"byte_end":338,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting Started","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":339,"byte_end":360,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":361,"byte_end":364,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":365,"byte_end":376,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"! extern crate lexical_core;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":377,"byte_end":407,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":408,"byte_end":411,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! // String to number using Rust slices.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":412,"byte_end":454,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"! // The argument is the byte string parsed.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":455,"byte_end":501,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"! let f: f32 = lexical_core::parse(b\"3.5\").unwrap();   // 3.5","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":502,"byte_end":565,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"! let i: i32 = lexical_core::parse(b\"15\").unwrap();    // 15","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":566,"byte_end":628,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":629,"byte_end":632,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! // All lexical_core parsers are checked, they validate the","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":633,"byte_end":695,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"! // input data is entirely correct, and stop parsing when invalid data","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":696,"byte_end":769,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"! // is found, or upon numerical overflow.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":770,"byte_end":814,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"! let r = lexical_core::parse::<u8>(b\"256\"); // Err(ErrorCode::Overflow.into())","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":815,"byte_end":896,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"! let r = lexical_core::parse::<u8>(b\"1a5\"); // Err(ErrorCode::InvalidDigit.into())","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":897,"byte_end":982,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":983,"byte_end":986,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! // In order to extract and parse a number from a substring of the input","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":987,"byte_end":1062,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"! // data, use `parse_partial`. These functions return the parsed value and","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1063,"byte_end":1140,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"! // the number of processed digits, allowing you to extract and parse the","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1141,"byte_end":1217,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"! // number in a single pass.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1218,"byte_end":1249,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"! let r = lexical_core::parse_partial::<i8>(b\"3a5\"); // Ok((3, 1))","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1250,"byte_end":1318,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! // If an insufficiently long buffer is passed, the serializer will panic.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1323,"byte_end":1400,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"! // PANICS","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1401,"byte_end":1414,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"! let mut buf = [b'0'; 1];","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1415,"byte_end":1443,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"! //let slc = lexical_core::write::<i64>(15, &mut buf);","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1444,"byte_end":1501,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1502,"byte_end":1505,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! // In order to guarantee the buffer is long enough, always ensure there","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1506,"byte_end":1581,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"! // are at least `T::FORMATTED_SIZE` bytes, which requires the","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1582,"byte_end":1647,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"! // `lexical_core::Number` trait to be in scope.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1648,"byte_end":1699,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"! use lexical_core::Number;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1700,"byte_end":1729,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"! let mut buf = [b'0'; f64::FORMATTED_SIZE];","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1730,"byte_end":1776,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"! let slc = lexical_core::write::<f64>(15.1, &mut buf);","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1777,"byte_end":1834,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"! assert_eq!(slc, b\"15.1\");","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1835,"byte_end":1864,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1865,"byte_end":1868,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! // When the `radix` feature is enabled, for decimal floats, using","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1869,"byte_end":1938,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"! // `T::FORMATTED_SIZE` may significantly overestimate the space","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":1939,"byte_end":2006,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"! // required to format the number. Therefore, the","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2007,"byte_end":2059,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"! // `T::FORMATTED_SIZE_DECIMAL` constants allow you to get a much","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2060,"byte_end":2128,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"! // tighter bound on the space required.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2129,"byte_end":2172,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"! let mut buf = [b'0'; f64::FORMATTED_SIZE_DECIMAL];","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2173,"byte_end":2227,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"! let slc = lexical_core::write::<f64>(15.1, &mut buf);","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2228,"byte_end":2285,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"! assert_eq!(slc, b\"15.1\");","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2286,"byte_end":2315,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2316,"byte_end":2323,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2324,"byte_end":2327,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! # Conversion API","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2328,"byte_end":2348,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2349,"byte_end":2352,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! **To String**","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2353,"byte_end":2370,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"! - [`write`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2371,"byte_end":2386,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2447,"byte_end":2450,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! **From String**","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2451,"byte_end":2470,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"! - [`parse`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2471,"byte_end":2486,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"! - [`parse_partial`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2701,"byte_end":2724,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"! - [`parse_lossy`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":2963,"byte_end":2984,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"! - [`parse_partial_lossy`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3217,"byte_end":3246,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3503,"byte_end":3506,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! # Configuration Settings","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3507,"byte_end":3535,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3536,"byte_end":3539,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! **Get Configuration**","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3540,"byte_end":3565,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"! - [`get_exponent_default_char`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3566,"byte_end":3601,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"! - [`get_nan_string`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3771,"byte_end":3795,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"! - [`get_inf_string`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3796,"byte_end":3820,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"! - [`get_infinity_string`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3821,"byte_end":3850,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3851,"byte_end":3854,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! **Set Configuration**","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3855,"byte_end":3880,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"! - [`set_exponent_default_char`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":3881,"byte_end":3916,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"! - [`set_nan_string`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4086,"byte_end":4110,"line_start":92,"line_end":92,"column_start":1,"column_end":25}},{"value":"! - [`set_inf_string`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4111,"byte_end":4135,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"! - [`set_infinity_string`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4136,"byte_end":4165,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4166,"byte_end":4169,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! [`write`]: fn.write.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4170,"byte_end":4198,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"! [`parse`]: fn.parse.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4278,"byte_end":4306,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"! [`parse_partial`]: fn.parse_partial.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4586,"byte_end":4630,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"! [`parse_lossy`]: fn.parse_lossy.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":4958,"byte_end":4998,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"! [`parse_partial_lossy`]: fn.parse_partial_lossy.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":5314,"byte_end":5370,"line_start":110,"line_end":110,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":5734,"byte_end":5737,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! [`get_exponent_default_char`]: fn.get_exponent_default_char.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":5738,"byte_end":5806,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"! [`get_nan_string`]: fn.get_nan_string.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6034,"byte_end":6080,"line_start":118,"line_end":118,"column_start":1,"column_end":47}},{"value":"! [`get_inf_string`]: fn.get_inf_string.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6081,"byte_end":6127,"line_start":119,"line_end":119,"column_start":1,"column_end":47}},{"value":"! [`get_infinity_string`]: fn.get_infinity_string.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6128,"byte_end":6184,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6185,"byte_end":6188,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! [`set_exponent_default_char`]: fn.set_exponent_default_char.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6189,"byte_end":6257,"line_start":122,"line_end":122,"column_start":1,"column_end":69}},{"value":"! [`set_nan_string`]: fn.set_nan_string.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6485,"byte_end":6531,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"! [`set_inf_string`]: fn.set_inf_string.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6532,"byte_end":6578,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"! [`set_infinity_string`]: fn.set_infinity_string.html","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":6579,"byte_end":6635,"line_start":127,"line_end":127,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":26889,"byte_end":26900,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"FromLexical","qualname":"::util::traits::FromLexical","value":"FromLexical: Number","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":" Trait for numerical types that can be parsed from bytes.\n","sig":null,"attributes":[{"value":"/ Trait for numerical types that can be parsed from bytes.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":26818,"byte_end":26878,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27457,"byte_end":27469,"line_start":39,"line_end":39,"column_start":8,"column_end":20},"name":"from_lexical","qualname":"::util::traits::FromLexical::from_lexical","value":"fn (bytes: &[u8]) -> Result<Self>","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Checked parser for a string-to-number conversion.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":26915,"byte_end":26968,"line_start":27,"line_end":27,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":26973,"byte_end":26976,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":26981,"byte_end":27044,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/ any invalid digits are found during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27049,"byte_end":27097,"line_start":30,"line_end":30,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27102,"byte_end":27105,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value,","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27110,"byte_end":27168,"line_start":32,"line_end":32,"column_start":5,"column_end":63}},{"value":"/ or an error containing any errors that occurred during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27173,"byte_end":27240,"line_start":33,"line_end":33,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27245,"byte_end":27248,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Numeric overflow takes precedence over the presence of an invalid","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27253,"byte_end":27322,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ digit, and therefore may mask an invalid digit error.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27327,"byte_end":27384,"line_start":36,"line_end":36,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27389,"byte_end":27392,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27397,"byte_end":27449,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":28009,"byte_end":28029,"line_start":52,"line_end":52,"column_start":8,"column_end":28},"name":"from_lexical_partial","qualname":"::util::traits::FromLexical::from_lexical_partial","value":"fn (bytes: &[u8]) -> Result<(Self, usize)>","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Checked parser for a string-to-number conversion.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27506,"byte_end":27559,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27564,"byte_end":27567,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27572,"byte_end":27638,"line_start":43,"line_end":43,"column_start":5,"column_end":71}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27643,"byte_end":27703,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/ and the parsed value until that point.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27708,"byte_end":27750,"line_start":45,"line_end":45,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27755,"byte_end":27758,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27763,"byte_end":27820,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ and the number of processed digits, or an error containing","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27825,"byte_end":27887,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/ any errors that occurred during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27892,"byte_end":27936,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27941,"byte_end":27944,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":27949,"byte_end":28001,"line_start":51,"line_end":51,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30635,"byte_end":30651,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"name":"FromLexicalLossy","qualname":"::util::traits::FromLexicalLossy","value":"FromLexicalLossy: FromLexical","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":" Trait for floating-point types that can be parsed using lossy algorithms from bytes.\n","sig":null,"attributes":[{"value":"/ Trait for floating-point types that can be parsed using lossy algorithms from bytes.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30536,"byte_end":30624,"line_start":129,"line_end":129,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31154,"byte_end":31172,"line_start":141,"line_end":141,"column_start":8,"column_end":26},"name":"from_lexical_lossy","qualname":"::util::traits::FromLexicalLossy::from_lexical_lossy","value":"fn (bytes: &[u8]) -> Result<Self>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Lossy, checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Lossy, checked parser for a string-to-number conversion.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30671,"byte_end":30731,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30736,"byte_end":30739,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30744,"byte_end":30807,"line_start":133,"line_end":133,"column_start":5,"column_end":68}},{"value":"/ any invalid digits are found during parsing. This parser is","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30812,"byte_end":30875,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30880,"byte_end":30938,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30943,"byte_end":30946,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value,","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30951,"byte_end":31009,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/ or an error containing any errors that occurred during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31014,"byte_end":31081,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31086,"byte_end":31089,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31094,"byte_end":31146,"line_start":140,"line_end":140,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31797,"byte_end":31823,"line_start":155,"line_end":155,"column_start":8,"column_end":34},"name":"from_lexical_partial_lossy","qualname":"::util::traits::FromLexicalLossy::from_lexical_partial_lossy","value":"fn (bytes: &[u8]) -> Result<(Self, usize)>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Lossy, checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Lossy, checked parser for a string-to-number conversion.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31209,"byte_end":31269,"line_start":143,"line_end":143,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31274,"byte_end":31277,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31282,"byte_end":31348,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31353,"byte_end":31413,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ and the parsed value until that point. This parser is","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31418,"byte_end":31475,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31480,"byte_end":31538,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31543,"byte_end":31546,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31551,"byte_end":31608,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ and the number of processed digits, or an error containing","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31613,"byte_end":31675,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ any errors that occurred during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31680,"byte_end":31724,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31729,"byte_end":31732,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":31737,"byte_end":31789,"line_start":154,"line_end":154,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44645,"byte_end":44654,"line_start":476,"line_end":476,"column_start":11,"column_end":20},"name":"ToLexical","qualname":"::util::traits::ToLexical","value":"ToLexical: Number","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" Trait for numerical types that can be serialized to bytes.","sig":null,"attributes":[{"value":"/ Trait for numerical types that can be serialized to bytes.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44202,"byte_end":44264,"line_start":467,"line_end":467,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44265,"byte_end":44268,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ To determine the number of bytes required to serialize a value to","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44269,"byte_end":44338,"line_start":469,"line_end":469,"column_start":1,"column_end":70}},{"value":"/ string, check the associated constants from a required trait:","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44339,"byte_end":44404,"line_start":470,"line_end":470,"column_start":1,"column_end":66}},{"value":"/ - [`FORMATTED_SIZE`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44405,"byte_end":44429,"line_start":471,"line_end":471,"column_start":1,"column_end":25}},{"value":"/ - [`FORMATTED_SIZE_DECIMAL`]","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44430,"byte_end":44462,"line_start":472,"line_end":472,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44463,"byte_end":44466,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ [`FORMATTED_SIZE`]: trait.Number.html#associatedconstant.FORMATTED_SIZE","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44467,"byte_end":44542,"line_start":474,"line_end":474,"column_start":1,"column_end":76}},{"value":"/ [`FORMATTED_SIZE_DECIMAL`]: trait.Number.html#associatedconstant.FORMATTED_SIZE_DECIMAL","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44543,"byte_end":44634,"line_start":475,"line_end":475,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45373,"byte_end":45383,"line_start":493,"line_end":493,"column_start":8,"column_end":18},"name":"to_lexical","qualname":"::util::traits::ToLexical::to_lexical","value":"fn <'a> (self, bytes: &'a mut [u8]) -> &'a mut [u8]","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Serializer for a number-to-string conversion.","sig":null,"attributes":[{"value":"/ Serializer for a number-to-string conversion.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44669,"byte_end":44718,"line_start":477,"line_end":477,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44723,"byte_end":44726,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Returns a subslice of the input buffer containing the written bytes,","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44731,"byte_end":44803,"line_start":479,"line_end":479,"column_start":5,"column_end":77}},{"value":"/ starting from the same address in memory as the input slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44808,"byte_end":44872,"line_start":480,"line_end":480,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44877,"byte_end":44880,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * `value`   - Number to serialize.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44885,"byte_end":44923,"line_start":482,"line_end":482,"column_start":5,"column_end":43}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44928,"byte_end":44980,"line_start":483,"line_end":483,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44985,"byte_end":44988,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44993,"byte_end":45005,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45010,"byte_end":45013,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Panics if the buffer is not of sufficient size. The caller","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45018,"byte_end":45080,"line_start":487,"line_end":487,"column_start":5,"column_end":67}},{"value":"/ must provide a slice of sufficient size. In order to ensure","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45085,"byte_end":45148,"line_start":488,"line_end":488,"column_start":5,"column_end":68}},{"value":"/ the function will not panic, ensure the buffer has at least","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45153,"byte_end":45216,"line_start":489,"line_end":489,"column_start":5,"column_end":68}},{"value":"/ [`FORMATTED_SIZE_DECIMAL`] elements.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45221,"byte_end":45261,"line_start":490,"line_end":490,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45266,"byte_end":45269,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`FORMATTED_SIZE_DECIMAL`]: trait.Number.html#associatedconstant.FORMATTED_SIZE_DECIMAL","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":45274,"byte_end":45365,"line_start":492,"line_end":492,"column_start":5,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":64779,"byte_end":64785,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"AsCast","qualname":"::util::cast::AsCast","value":"AsCast: AsPrimitive","parent":null,"children":[{"krate":0,"index":76}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":64715,"byte_end":64768,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":64928,"byte_end":64935,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"as_cast","qualname":"::util::cast::AsCast::as_cast","value":"fn <N> (n: N) -> Self","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `AsPrimitive` trait.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":64805,"byte_end":64871,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `AsPrimitive` trait.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":64876,"byte_end":64920,"line_start":21,"line_end":21,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":65835,"byte_end":65842,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"TryCast","qualname":"::util::cast::TryCast","value":"TryCast<T>: Sized","parent":null,"children":[{"krate":0,"index":84}],"decl_id":null,"docs":" Non-lossy cast between types. Returns None if new type cannot represent value.\n","sig":null,"attributes":[{"value":"/ Non-lossy cast between types. Returns None if new type cannot represent value.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":65742,"byte_end":65824,"line_start":64,"line_end":64,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":65920,"byte_end":65928,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"try_cast","qualname":"::util::cast::TryCast::try_cast","value":"fn (self) -> Option<T>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Consume self and return the cast value (or None).\n","sig":null,"attributes":[{"value":"/ Consume self and return the cast value (or None).","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":65859,"byte_end":65912,"line_start":66,"line_end":66,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111704,"byte_end":111729,"line_start":149,"line_end":149,"column_start":8,"column_end":33},"name":"get_exponent_default_char","qualname":"::util::config::get_exponent_default_char","value":"fn () -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get default character for the exponent symbol.","sig":null,"attributes":[{"value":"/ Get default character for the exponent symbol.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111557,"byte_end":111607,"line_start":145,"line_end":145,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111608,"byte_end":111611,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Default character for scientific notation, used when the `radix < 15`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111612,"byte_end":111686,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111687,"byte_end":111696,"line_start":148,"line_end":148,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112357,"byte_end":112382,"line_start":174,"line_end":174,"column_start":15,"column_end":40},"name":"set_exponent_default_char","qualname":"::util::config::set_exponent_default_char","value":"fn (ch: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the default character for the exponent symbol.","sig":null,"attributes":[{"value":"/ Set the default character for the exponent symbol.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111792,"byte_end":111846,"line_start":156,"line_end":156,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111847,"byte_end":111850,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Default character for scientific notation, used when the `radix < 15`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111851,"byte_end":111925,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111926,"byte_end":111929,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ To change the expected, default character for an exponent,","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111930,"byte_end":111992,"line_start":160,"line_end":160,"column_start":1,"column_end":63}},{"value":"/ change this value before using lexical.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":111993,"byte_end":112036,"line_start":161,"line_end":161,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112037,"byte_end":112040,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ * `ch`      - Character for exponent symbol.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112041,"byte_end":112089,"line_start":163,"line_end":163,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112090,"byte_end":112093,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112094,"byte_end":112106,"line_start":165,"line_end":165,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112107,"byte_end":112110,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112111,"byte_end":112184,"line_start":167,"line_end":167,"column_start":1,"column_end":74}},{"value":"/ Do not call this function after compiling any formats.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112185,"byte_end":112243,"line_start":168,"line_end":168,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112244,"byte_end":112247,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112248,"byte_end":112260,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112261,"byte_end":112264,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Panics if the character is in the character set `[A-Da-d.+\\-]`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112265,"byte_end":112332,"line_start":172,"line_end":172,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":112333,"byte_end":112342,"line_start":173,"line_end":173,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114584,"byte_end":114598,"line_start":251,"line_end":251,"column_start":8,"column_end":22},"name":"get_nan_string","qualname":"::util::config::get_nan_string","value":"fn () -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get string representation of Not a Number as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get string representation of Not a Number as a byte slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114504,"byte_end":114566,"line_start":249,"line_end":249,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114567,"byte_end":114576,"line_start":250,"line_end":250,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115082,"byte_end":115096,"line_start":273,"line_end":273,"column_start":15,"column_end":29},"name":"set_nan_string","qualname":"::util::config::set_nan_string","value":"fn (bytes: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set representation of Not a Number from a byte slice.","sig":null,"attributes":[{"value":"/ Set representation of Not a Number from a byte slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114672,"byte_end":114729,"line_start":258,"line_end":258,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114730,"byte_end":114733,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ * `bytes`    - Slice of bytes to assign as NaN string representation.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114734,"byte_end":114807,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114808,"byte_end":114811,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114812,"byte_end":114824,"line_start":262,"line_end":262,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114825,"byte_end":114828,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114829,"byte_end":114902,"line_start":264,"line_end":264,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114903,"byte_end":114906,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114907,"byte_end":114919,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114920,"byte_end":114923,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ Panics if:","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114924,"byte_end":114938,"line_start":268,"line_end":268,"column_start":1,"column_end":15}},{"value":"/ - `bytes.len() >= f32::FORMATTED_SIZE`","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114939,"byte_end":114981,"line_start":269,"line_end":269,"column_start":1,"column_end":43}},{"value":"/ - `bytes` is empty","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":114982,"byte_end":115004,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/ - `bytes` does not start with an `'N'` or `'n'`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115005,"byte_end":115057,"line_start":271,"line_end":271,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115058,"byte_end":115067,"line_start":272,"line_end":272,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115275,"byte_end":115289,"line_start":281,"line_end":281,"column_start":8,"column_end":22},"name":"get_inf_string","qualname":"::util::config::get_inf_string","value":"fn () -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the short representation of an Infinity literal as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the short representation of an Infinity literal as a byte slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115185,"byte_end":115257,"line_start":279,"line_end":279,"column_start":1,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115258,"byte_end":115267,"line_start":280,"line_end":280,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115835,"byte_end":115849,"line_start":304,"line_end":304,"column_start":15,"column_end":29},"name":"set_inf_string","qualname":"::util::config::set_inf_string","value":"fn (bytes: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the short representation of Infinity from a byte slice.","sig":null,"attributes":[{"value":"/ Set the short representation of Infinity from a byte slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115363,"byte_end":115426,"line_start":288,"line_end":288,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115427,"byte_end":115430,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ * `bytes`    - Slice of bytes to assign as Infinity string representation.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115431,"byte_end":115509,"line_start":290,"line_end":290,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115510,"byte_end":115513,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115514,"byte_end":115526,"line_start":292,"line_end":292,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115527,"byte_end":115530,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115531,"byte_end":115604,"line_start":294,"line_end":294,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115605,"byte_end":115608,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115609,"byte_end":115621,"line_start":296,"line_end":296,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115622,"byte_end":115625,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Panics if:","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115626,"byte_end":115640,"line_start":298,"line_end":298,"column_start":1,"column_end":15}},{"value":"/ - `bytes.len() >= f32::FORMATTED_SIZE`","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115641,"byte_end":115683,"line_start":299,"line_end":299,"column_start":1,"column_end":43}},{"value":"/ - `bytes.len() >= get_infinity_string().len()`","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115684,"byte_end":115734,"line_start":300,"line_end":300,"column_start":1,"column_end":51}},{"value":"/ - `bytes` is empty","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115735,"byte_end":115757,"line_start":301,"line_end":301,"column_start":1,"column_end":23}},{"value":"/ - `bytes` does not start with an `'I'` or `'i'`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115758,"byte_end":115810,"line_start":302,"line_end":302,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115811,"byte_end":115820,"line_start":303,"line_end":303,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116068,"byte_end":116087,"line_start":312,"line_end":312,"column_start":8,"column_end":27},"name":"get_infinity_string","qualname":"::util::config::get_infinity_string","value":"fn () -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the long representation of an Infinity literal as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the long representation of an Infinity literal as a byte slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":115979,"byte_end":116050,"line_start":310,"line_end":310,"column_start":1,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116051,"byte_end":116060,"line_start":311,"line_end":311,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116631,"byte_end":116650,"line_start":335,"line_end":335,"column_start":15,"column_end":34},"name":"set_infinity_string","qualname":"::util::config::set_infinity_string","value":"fn (bytes: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the long representation of Infinity from a byte slice.","sig":null,"attributes":[{"value":"/ Set the long representation of Infinity from a byte slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116166,"byte_end":116228,"line_start":319,"line_end":319,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116229,"byte_end":116232,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ * `bytes`    - Slice of bytes to assign as Infinity string representation.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116233,"byte_end":116311,"line_start":321,"line_end":321,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116312,"byte_end":116315,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116316,"byte_end":116328,"line_start":323,"line_end":323,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116329,"byte_end":116332,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116333,"byte_end":116406,"line_start":325,"line_end":325,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116407,"byte_end":116410,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116411,"byte_end":116423,"line_start":327,"line_end":327,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116424,"byte_end":116427,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Panics if:","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116428,"byte_end":116442,"line_start":329,"line_end":329,"column_start":1,"column_end":15}},{"value":"/ - `bytes.len() >= f32::FORMATTED_SIZE`","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116443,"byte_end":116485,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"/ - `bytes.len() < get_inf_string().len()`","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116486,"byte_end":116530,"line_start":331,"line_end":331,"column_start":1,"column_end":45}},{"value":"/ - `bytes` is empty","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116531,"byte_end":116553,"line_start":332,"line_end":332,"column_start":1,"column_end":23}},{"value":"/ - `bytes` does not start with an `'I'` or `'i'`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116554,"byte_end":116606,"line_start":333,"line_end":333,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":116607,"byte_end":116616,"line_start":334,"line_end":334,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":121},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":120877,"byte_end":120888,"line_start":413,"line_end":413,"column_start":11,"column_end":22},"name":"BUFFER_SIZE","qualname":"::util::config::BUFFER_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bytes required to serialize any number to string.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes required to serialize any number to string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":120795,"byte_end":120866,"line_start":412,"line_end":412,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196500,"byte_end":196508,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::util::error::ErrorCode::Overflow","value":"ErrorCode::Overflow","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Integral overflow occurred during numeric parsing.","sig":null,"attributes":[{"value":"/ Integral overflow occurred during numeric parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196344,"byte_end":196398,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196403,"byte_end":196406,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Numeric overflow takes precedence over the presence of an invalid","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196411,"byte_end":196480,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/ digit.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196485,"byte_end":196495,"line_start":31,"line_end":31,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196676,"byte_end":196685,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"Underflow","qualname":"::util::error::ErrorCode::Underflow","value":"ErrorCode::Underflow","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Integral underflow occurred during numeric parsing.","sig":null,"attributes":[{"value":"/ Integral underflow occurred during numeric parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196519,"byte_end":196574,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196579,"byte_end":196582,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Numeric overflow takes precedence over the presence of an invalid","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196587,"byte_end":196656,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ digit.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196661,"byte_end":196671,"line_start":36,"line_end":36,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196751,"byte_end":196763,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"InvalidDigit","qualname":"::util::error::ErrorCode::InvalidDigit","value":"ErrorCode::InvalidDigit","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Invalid digit found before string termination.\n","sig":null,"attributes":[{"value":"/ Invalid digit found before string termination.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196696,"byte_end":196746,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196806,"byte_end":196811,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Empty","qualname":"::util::error::ErrorCode::Empty","value":"ErrorCode::Empty","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Empty byte array found.\n","sig":null,"attributes":[{"value":"/ Empty byte array found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196774,"byte_end":196801,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196852,"byte_end":196865,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"name":"EmptyMantissa","qualname":"::util::error::ErrorCode::EmptyMantissa","value":"ErrorCode::EmptyMantissa","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Empty mantissa found.\n","sig":null,"attributes":[{"value":"/ Empty mantissa found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196822,"byte_end":196847,"line_start":42,"line_end":42,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196906,"byte_end":196919,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"EmptyExponent","qualname":"::util::error::ErrorCode::EmptyExponent","value":"ErrorCode::EmptyExponent","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Empty exponent found.\n","sig":null,"attributes":[{"value":"/ Empty exponent found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196876,"byte_end":196901,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196959,"byte_end":196971,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"EmptyInteger","qualname":"::util::error::ErrorCode::EmptyInteger","value":"ErrorCode::EmptyInteger","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Empty integer found.\n","sig":null,"attributes":[{"value":"/ Empty integer found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196930,"byte_end":196954,"line_start":46,"line_end":46,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197012,"byte_end":197025,"line_start":49,"line_end":49,"column_start":5,"column_end":18},"name":"EmptyFraction","qualname":"::util::error::ErrorCode::EmptyFraction","value":"ErrorCode::EmptyFraction","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Empty fraction found.\n","sig":null,"attributes":[{"value":"/ Empty fraction found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196982,"byte_end":197007,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197086,"byte_end":197113,"line_start":51,"line_end":51,"column_start":5,"column_end":32},"name":"InvalidPositiveMantissaSign","qualname":"::util::error::ErrorCode::InvalidPositiveMantissaSign","value":"ErrorCode::InvalidPositiveMantissaSign","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Invalid positive mantissa sign was found.\n","sig":null,"attributes":[{"value":"/ Invalid positive mantissa sign was found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197036,"byte_end":197081,"line_start":50,"line_end":50,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197175,"byte_end":197194,"line_start":53,"line_end":53,"column_start":5,"column_end":24},"name":"MissingMantissaSign","qualname":"::util::error::ErrorCode::MissingMantissaSign","value":"ErrorCode::MissingMantissaSign","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Mantissa sign was required, but not found.\n","sig":null,"attributes":[{"value":"/ Mantissa sign was required, but not found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197124,"byte_end":197170,"line_start":52,"line_end":52,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197252,"byte_end":197267,"line_start":55,"line_end":55,"column_start":5,"column_end":20},"name":"InvalidExponent","qualname":"::util::error::ErrorCode::InvalidExponent","value":"ErrorCode::InvalidExponent","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Exponent was present but not allowed.\n","sig":null,"attributes":[{"value":"/ Exponent was present but not allowed.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197206,"byte_end":197247,"line_start":54,"line_end":54,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197329,"byte_end":197356,"line_start":57,"line_end":57,"column_start":5,"column_end":32},"name":"InvalidPositiveExponentSign","qualname":"::util::error::ErrorCode::InvalidPositiveExponentSign","value":"ErrorCode::InvalidPositiveExponentSign","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Invalid positive exponent sign was found.\n","sig":null,"attributes":[{"value":"/ Invalid positive exponent sign was found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197279,"byte_end":197324,"line_start":56,"line_end":56,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197419,"byte_end":197438,"line_start":59,"line_end":59,"column_start":5,"column_end":24},"name":"MissingExponentSign","qualname":"::util::error::ErrorCode::MissingExponentSign","value":"ErrorCode::MissingExponentSign","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Exponent sign was required, but not found.\n","sig":null,"attributes":[{"value":"/ Exponent sign was required, but not found.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197368,"byte_end":197414,"line_start":58,"line_end":58,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197507,"byte_end":197530,"line_start":61,"line_end":61,"column_start":5,"column_end":28},"name":"ExponentWithoutFraction","qualname":"::util::error::ErrorCode::ExponentWithoutFraction","value":"ErrorCode::ExponentWithoutFraction","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Exponent was present without fraction component.\n","sig":null,"attributes":[{"value":"/ Exponent was present without fraction component.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197450,"byte_end":197502,"line_start":60,"line_end":60,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197585,"byte_end":197604,"line_start":63,"line_end":63,"column_start":5,"column_end":24},"name":"InvalidLeadingZeros","qualname":"::util::error::ErrorCode::InvalidLeadingZeros","value":"ErrorCode::InvalidLeadingZeros","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Integer had invalid leading zeros.\n","sig":null,"attributes":[{"value":"/ Integer had invalid leading zeros.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197542,"byte_end":197580,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197759,"byte_end":197774,"line_start":68,"line_end":68,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::util::error::ErrorCode::__Nonexhaustive","value":"ErrorCode::__Nonexhaustive","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196328,"byte_end":196337,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"ErrorCode","qualname":"::util::error::ErrorCode","value":"ErrorCode::{Overflow, Underflow, InvalidDigit, Empty, EmptyMantissa, EmptyExponent, EmptyInteger, EmptyFraction, InvalidPositiveMantissaSign, MissingMantissaSign, InvalidExponent, InvalidPositiveExponentSign, MissingExponentSign, ExponentWithoutFraction, InvalidLeadingZeros, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394}],"decl_id":null,"docs":" Error code, indicating failure type.","sig":null,"attributes":[{"value":"/ Error code, indicating failure type.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195563,"byte_end":195603,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195604,"byte_end":195607,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Error messages are designating by an error code of less than 0.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195608,"byte_end":195675,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ This is to be compatible with C conventions. This enumeration is","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195676,"byte_end":195744,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ FFI-compatible for interfacing with C code.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195745,"byte_end":195792,"line_start":7,"line_end":7,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195793,"byte_end":195796,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # FFI","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195797,"byte_end":195806,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195807,"byte_end":195810,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For interfacing with FFI-code, this may be approximated by:","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195811,"byte_end":195874,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/ ```text","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195875,"byte_end":195886,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ const int32_t OVERFLOW = -1;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195887,"byte_end":195919,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/ const int32_t UNDERFLOW = -2;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195920,"byte_end":195953,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ const int32_t INVALID_DIGIT = -3;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195954,"byte_end":195991,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/ const int32_t EMPTY = -4;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":195992,"byte_end":196021,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ const int32_t EMPTY_FRACTION = -5;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196022,"byte_end":196060,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/ const int32_t EMPTY_EXPONENT = -6;","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196061,"byte_end":196099,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196100,"byte_end":196107,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196108,"byte_end":196111,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196112,"byte_end":196124,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196125,"byte_end":196128,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Assigning any value outside the range `[-6, -1]` to value of type","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196129,"byte_end":196198,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ ErrorCode may invoke undefined-behavior.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196199,"byte_end":196243,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"repr(i32)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":196244,"byte_end":196256,"line_start":25,"line_end":25,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197972,"byte_end":197977,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"Error","qualname":"::util::error::Error","value":"Error { code, index }","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"decl_id":null,"docs":" Error type for lexical parsing.","sig":null,"attributes":[{"value":"/ Error type for lexical parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197786,"byte_end":197821,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197822,"byte_end":197825,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This error is FFI-compatible for interfacing with C code.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197826,"byte_end":197887,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"repr(C)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197888,"byte_end":197898,"line_start":74,"line_end":74,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":198047,"byte_end":198051,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"code","qualname":"::util::error::Error::code","value":"util::error::ErrorCode","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":" Error code designating the type of error occurred.\n","sig":null,"attributes":[{"value":"/ Error code designating the type of error occurred.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":197984,"byte_end":198038,"line_start":77,"line_end":77,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":198131,"byte_end":198136,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"name":"index","qualname":"::util::error::Error::index","value":"usize","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":" Optional position within the buffer for the error.\n","sig":null,"attributes":[{"value":"/ Optional position within the buffer for the error.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":198068,"byte_end":198122,"line_start":79,"line_end":79,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211453,"byte_end":211465,"line_start":688,"line_end":688,"column_start":20,"column_end":32},"name":"NumberFormat","qualname":"::util::format::NumberFormat","value":"NumberFormat {  }","parent":null,"children":[{"krate":0,"index":1443}],"decl_id":null,"docs":" Dummy bitflags for the float format.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211491,"byte_end":211506,"line_start":689,"line_end":689,"column_start":19,"column_end":34},"name":"__NONEXHAUSTIVE","qualname":"::util::format::NumberFormat::__NONEXHAUSTIVE","value":"NumberFormat","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211586,"byte_end":211594,"line_start":695,"line_end":695,"column_start":16,"column_end":24},"name":"standard","qualname":"<NumberFormat>::standard","value":"fn () -> Option<NumberFormat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211561,"byte_end":211570,"line_start":694,"line_end":694,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211709,"byte_end":211724,"line_start":700,"line_end":700,"column_start":16,"column_end":31},"name":"digit_separator","qualname":"<NumberFormat>::digit_separator","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211684,"byte_end":211693,"line_start":699,"line_end":699,"column_start":9,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315450,"byte_end":315456,"line_start":17,"line_end":17,"column_start":11,"column_end":17},"name":"Number","qualname":"::util::num::Number","value":"Number: Primitive + iter::Product + iter::Sum + ops::Add<Output = Self> +\nops::AddAssign + ops::Div<Output = Self> + ops::DivAssign + ops::Mul<Output =\nSelf> + ops::MulAssign + ops::Rem<Output = Self> + ops::RemAssign +\nops::Sub<Output = Self> + ops::SubAssign","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Numerical type trait.\n","sig":null,"attributes":[{"value":"/ Numerical type trait.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315399,"byte_end":315424,"line_start":15,"line_end":15,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315870,"byte_end":315884,"line_start":34,"line_end":34,"column_start":11,"column_end":25},"name":"FORMATTED_SIZE","qualname":"::util::num::Number::FORMATTED_SIZE","value":"usize","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Maximum number of bytes required to serialize a number to string.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes required to serialize a number to string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315790,"byte_end":315859,"line_start":33,"line_end":33,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315987,"byte_end":316009,"line_start":36,"line_end":36,"column_start":11,"column_end":33},"name":"FORMATTED_SIZE_DECIMAL","qualname":"::util::num::Number::FORMATTED_SIZE_DECIMAL","value":"usize","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Maximum number of bytes required to serialize a number to a decimal string.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes required to serialize a number to a decimal string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315897,"byte_end":315976,"line_start":35,"line_end":35,"column_start":5,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":188},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":316084,"byte_end":316093,"line_start":38,"line_end":38,"column_start":11,"column_end":20},"name":"IS_SIGNED","qualname":"::util::num::Number::IS_SIGNED","value":"bool","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" If the type can hold a signed (negative) value.\n","sig":null,"attributes":[{"value":"/ If the type can hold a signed (negative) value.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":316022,"byte_end":316073,"line_start":37,"line_end":37,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317445,"byte_end":317452,"line_start":75,"line_end":75,"column_start":11,"column_end":18},"name":"Integer","qualname":"::util::num::Integer","value":"Integer: Number + Eq + Ord + fmt::Octal + fmt::LowerHex + fmt::UpperHex +\nops::BitAnd<Output = Self> + ops::BitAndAssign + ops::BitOr<Output = Self> +\nops::BitOrAssign + ops::BitXor<Output = Self> + ops::BitXorAssign + ops::Not +\nops::Shl<Self, Output = Self> + ops::Shl<u8, Output = Self> + ops::Shl<u16,\nOutput = Self> + ops::Shl<u32, Output = Self> + ops::Shl<u64, Output = Self> +\nops::Shl<usize, Output = Self> + ops::Shl<i8, Output = Self> + ops::Shl<i16,\nOutput = Self> + ops::Shl<i64, Output = Self> + ops::Shl<isize, Output =\nSelf> + ops::Shl<i32, Output = Self> + ops::ShlAssign<Self> +\nops::ShlAssign<u8> + ops::ShlAssign<u16> + ops::ShlAssign<u32> +\nops::ShlAssign<u64> + ops::ShlAssign<usize> + ops::ShlAssign<i8> +\nops::ShlAssign<i16> + ops::ShlAssign<i32> + ops::ShlAssign<i64> +\nops::ShlAssign<isize> + ops::Shr<Self, Output = Self> + ops::Shr<u8, Output =\nSelf> + ops::Shr<u16, Output = Self> + ops::Shr<u32, Output = Self> +\nops::Shr<u64, Output = Self> + ops::Shr<usize, Output = Self> + ops::Shr<i8,\nOutput = Self> + ops::Shr<i16, Output = Self> + ops::Shr<i64, Output = Self> +\nops::Shr<isize, Output = Self> + ops::Shr<i32, Output = Self> +\nops::ShrAssign<Self> + ops::ShrAssign<u8> + ops::ShrAssign<u16> +\nops::ShrAssign<u32> + ops::ShrAssign<u64> + ops::ShrAssign<usize> +\nops::ShrAssign<i8> + ops::ShrAssign<i16> + ops::ShrAssign<i32> +\nops::ShrAssign<i64> + ops::ShrAssign<isize>","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"decl_id":null,"docs":" Defines a trait that supports integral operations.\n","sig":null,"attributes":[{"value":"/ Defines a trait that supports integral operations.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317365,"byte_end":317419,"line_start":73,"line_end":73,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319087,"byte_end":319091,"line_start":134,"line_end":134,"column_start":11,"column_end":15},"name":"ZERO","qualname":"::util::num::Integer::ZERO","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319109,"byte_end":319112,"line_start":135,"line_end":135,"column_start":11,"column_end":14},"name":"ONE","qualname":"::util::num::Integer::ONE","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319130,"byte_end":319133,"line_start":136,"line_end":136,"column_start":11,"column_end":14},"name":"TWO","qualname":"::util::num::Integer::TWO","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319151,"byte_end":319154,"line_start":137,"line_end":137,"column_start":11,"column_end":14},"name":"MAX","qualname":"::util::num::Integer::MAX","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319172,"byte_end":319175,"line_start":138,"line_end":138,"column_start":11,"column_end":14},"name":"MIN","qualname":"::util::num::Integer::MIN","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319193,"byte_end":319197,"line_start":139,"line_end":139,"column_start":11,"column_end":15},"name":"BITS","qualname":"::util::num::Integer::BITS","value":"usize","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319243,"byte_end":319252,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"max_value","qualname":"::util::num::Integer::max_value","value":"fn () -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319271,"byte_end":319280,"line_start":143,"line_end":143,"column_start":8,"column_end":17},"name":"min_value","qualname":"::util::num::Integer::min_value","value":"fn () -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319299,"byte_end":319309,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::util::num::Integer::count_ones","value":"fn (self) -> u32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319331,"byte_end":319342,"line_start":145,"line_end":145,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::util::num::Integer::count_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319364,"byte_end":319377,"line_start":146,"line_end":146,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::util::num::Integer::leading_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319399,"byte_end":319413,"line_start":147,"line_end":147,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::util::num::Integer::trailing_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319435,"byte_end":319438,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"pow","qualname":"::util::num::Integer::pow","value":"fn (self, i: u32) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319469,"byte_end":319480,"line_start":149,"line_end":149,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::util::num::Integer::checked_add","value":"fn (self, i: Self) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319520,"byte_end":319531,"line_start":150,"line_end":150,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::util::num::Integer::checked_sub","value":"fn (self, i: Self) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319571,"byte_end":319582,"line_start":151,"line_end":151,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::util::num::Integer::checked_mul","value":"fn (self, i: Self) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319622,"byte_end":319633,"line_start":152,"line_end":152,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::util::num::Integer::checked_div","value":"fn (self, i: Self) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319673,"byte_end":319684,"line_start":153,"line_end":153,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::util::num::Integer::checked_rem","value":"fn (self, i: Self) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319724,"byte_end":319735,"line_start":154,"line_end":154,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::util::num::Integer::checked_neg","value":"fn (self) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319766,"byte_end":319777,"line_start":155,"line_end":155,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::util::num::Integer::checked_shl","value":"fn (self, i: u32) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319816,"byte_end":319827,"line_start":156,"line_end":156,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::util::num::Integer::checked_shr","value":"fn (self, i: u32) -> Option<Self>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319866,"byte_end":319878,"line_start":157,"line_end":157,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::util::num::Integer::wrapping_add","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319910,"byte_end":319922,"line_start":158,"line_end":158,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::util::num::Integer::wrapping_sub","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319954,"byte_end":319966,"line_start":159,"line_end":159,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::util::num::Integer::wrapping_mul","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319998,"byte_end":320010,"line_start":160,"line_end":160,"column_start":8,"column_end":20},"name":"wrapping_div","qualname":"::util::num::Integer::wrapping_div","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320042,"byte_end":320054,"line_start":161,"line_end":161,"column_start":8,"column_end":20},"name":"wrapping_rem","qualname":"::util::num::Integer::wrapping_rem","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320086,"byte_end":320098,"line_start":162,"line_end":162,"column_start":8,"column_end":20},"name":"wrapping_neg","qualname":"::util::num::Integer::wrapping_neg","value":"fn (self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320121,"byte_end":320133,"line_start":163,"line_end":163,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::util::num::Integer::wrapping_shl","value":"fn (self, i: u32) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320164,"byte_end":320176,"line_start":164,"line_end":164,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::util::num::Integer::wrapping_shr","value":"fn (self, i: u32) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320207,"byte_end":320222,"line_start":165,"line_end":165,"column_start":8,"column_end":23},"name":"overflowing_add","qualname":"::util::num::Integer::overflowing_add","value":"fn (self, i: Self) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320262,"byte_end":320277,"line_start":166,"line_end":166,"column_start":8,"column_end":23},"name":"overflowing_sub","qualname":"::util::num::Integer::overflowing_sub","value":"fn (self, i: Self) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320317,"byte_end":320332,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"overflowing_mul","qualname":"::util::num::Integer::overflowing_mul","value":"fn (self, i: Self) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320372,"byte_end":320387,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"overflowing_div","qualname":"::util::num::Integer::overflowing_div","value":"fn (self, i: Self) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320427,"byte_end":320442,"line_start":169,"line_end":169,"column_start":8,"column_end":23},"name":"overflowing_rem","qualname":"::util::num::Integer::overflowing_rem","value":"fn (self, i: Self) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320482,"byte_end":320497,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"overflowing_neg","qualname":"::util::num::Integer::overflowing_neg","value":"fn (self) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320528,"byte_end":320543,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"overflowing_shl","qualname":"::util::num::Integer::overflowing_shl","value":"fn (self, i: u32) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320582,"byte_end":320597,"line_start":172,"line_end":172,"column_start":8,"column_end":23},"name":"overflowing_shr","qualname":"::util::num::Integer::overflowing_shr","value":"fn (self, i: u32) -> (Self, bool)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320636,"byte_end":320650,"line_start":173,"line_end":173,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::util::num::Integer::saturating_add","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320682,"byte_end":320696,"line_start":174,"line_end":174,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::util::num::Integer::saturating_sub","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320728,"byte_end":320742,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"saturating_mul","qualname":"::util::num::Integer::saturating_mul","value":"fn (self, i: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320818,"byte_end":320822,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"zero","qualname":"::util::num::Integer::zero","value":"fn () -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Create literal zero.\n","sig":null,"attributes":[{"value":"/ Create literal zero.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320772,"byte_end":320796,"line_start":177,"line_end":177,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320801,"byte_end":320810,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320910,"byte_end":320913,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"one","qualname":"::util::num::Integer::one","value":"fn () -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Create literal one.\n","sig":null,"attributes":[{"value":"/ Create literal one.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320865,"byte_end":320888,"line_start":183,"line_end":183,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320893,"byte_end":320902,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321000,"byte_end":321003,"line_start":191,"line_end":191,"column_start":8,"column_end":11},"name":"two","qualname":"::util::num::Integer::two","value":"fn () -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Create literal two.\n","sig":null,"attributes":[{"value":"/ Create literal two.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320955,"byte_end":320978,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":320983,"byte_end":320992,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321103,"byte_end":321110,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::util::num::Integer::is_zero","value":"fn (self) -> bool","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Check if value is equal to zero.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to zero.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321045,"byte_end":321081,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321086,"byte_end":321095,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321222,"byte_end":321228,"line_start":203,"line_end":203,"column_start":8,"column_end":14},"name":"is_one","qualname":"::util::num::Integer::is_one","value":"fn (self) -> bool","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Check if value is equal to one.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to one.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321165,"byte_end":321200,"line_start":201,"line_end":201,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321205,"byte_end":321214,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321445,"byte_end":321456,"line_start":212,"line_end":212,"column_start":8,"column_end":19},"name":"ceil_divmod","qualname":"::util::num::Integer::ceil_divmod","value":"fn (self, y: Self) -> (Self, i32)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Get the fast ceiling of the quotient from integer division.\n Not safe, since the remainder can easily overflow.\n","sig":null,"attributes":[{"value":"/ Get the fast ceiling of the quotient from integer division.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321301,"byte_end":321364,"line_start":209,"line_end":209,"column_start":5,"column_end":68}},{"value":"/ Not safe, since the remainder can easily overflow.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321369,"byte_end":321423,"line_start":210,"line_end":210,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321428,"byte_end":321437,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321834,"byte_end":321842,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"ceil_div","qualname":"::util::num::Integer::ceil_div","value":"fn (self, y: Self) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Get the fast ceiling of the quotient from integer division.\n Not safe, since the remainder can easily overflow.\n","sig":null,"attributes":[{"value":"/ Get the fast ceiling of the quotient from integer division.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321690,"byte_end":321753,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/ Not safe, since the remainder can easily overflow.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321758,"byte_end":321812,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321817,"byte_end":321826,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322045,"byte_end":322053,"line_start":231,"line_end":231,"column_start":8,"column_end":16},"name":"ceil_mod","qualname":"::util::num::Integer::ceil_mod","value":"fn (self, y: Self) -> i32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Get the fast ceiling modulus from integer division.\n Not safe, since the remainder can easily overflow.\n","sig":null,"attributes":[{"value":"/ Get the fast ceiling modulus from integer division.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321909,"byte_end":321964,"line_start":228,"line_end":228,"column_start":5,"column_end":60}},{"value":"/ Not safe, since the remainder can easily overflow.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":321969,"byte_end":322023,"line_start":229,"line_end":229,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322028,"byte_end":322037,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322198,"byte_end":322208,"line_start":239,"line_end":239,"column_start":8,"column_end":18},"name":"bit_length","qualname":"::util::num::Integer::bit_length","value":"fn (self) -> u32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Get the number of bits in a value.\n","sig":null,"attributes":[{"value":"/ Get the number of bits in a value.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322138,"byte_end":322176,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322181,"byte_end":322190,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322325,"byte_end":322338,"line_start":246,"line_end":246,"column_start":8,"column_end":21},"name":"try_u8_or_max","qualname":"::util::num::Integer::try_u8_or_max","value":"fn (self) -> u8","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322308,"byte_end":322317,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322411,"byte_end":322425,"line_start":251,"line_end":251,"column_start":8,"column_end":22},"name":"try_u16_or_max","qualname":"::util::num::Integer::try_u16_or_max","value":"fn (self) -> u16","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322394,"byte_end":322403,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322499,"byte_end":322513,"line_start":256,"line_end":256,"column_start":8,"column_end":22},"name":"try_u32_or_max","qualname":"::util::num::Integer::try_u32_or_max","value":"fn (self) -> u32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322482,"byte_end":322491,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322587,"byte_end":322601,"line_start":261,"line_end":261,"column_start":8,"column_end":22},"name":"try_u64_or_max","qualname":"::util::num::Integer::try_u64_or_max","value":"fn (self) -> u64","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322570,"byte_end":322579,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322696,"byte_end":322711,"line_start":267,"line_end":267,"column_start":8,"column_end":23},"name":"try_u128_or_max","qualname":"::util::num::Integer::try_u128_or_max","value":"fn (self) -> u128","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322658,"byte_end":322674,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322679,"byte_end":322688,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322786,"byte_end":322802,"line_start":272,"line_end":272,"column_start":8,"column_end":24},"name":"try_usize_or_max","qualname":"::util::num::Integer::try_usize_or_max","value":"fn (self) -> usize","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322769,"byte_end":322778,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322878,"byte_end":322891,"line_start":277,"line_end":277,"column_start":8,"column_end":21},"name":"try_i8_or_max","qualname":"::util::num::Integer::try_i8_or_max","value":"fn (self) -> i8","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322861,"byte_end":322870,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322964,"byte_end":322978,"line_start":282,"line_end":282,"column_start":8,"column_end":22},"name":"try_i16_or_max","qualname":"::util::num::Integer::try_i16_or_max","value":"fn (self) -> i16","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":322947,"byte_end":322956,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323052,"byte_end":323066,"line_start":287,"line_end":287,"column_start":8,"column_end":22},"name":"try_i32_or_max","qualname":"::util::num::Integer::try_i32_or_max","value":"fn (self) -> i32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323035,"byte_end":323044,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323140,"byte_end":323154,"line_start":292,"line_end":292,"column_start":8,"column_end":22},"name":"try_i64_or_max","qualname":"::util::num::Integer::try_i64_or_max","value":"fn (self) -> i64","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323123,"byte_end":323132,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323249,"byte_end":323264,"line_start":298,"line_end":298,"column_start":8,"column_end":23},"name":"try_i128_or_max","qualname":"::util::num::Integer::try_i128_or_max","value":"fn (self) -> i128","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323211,"byte_end":323227,"line_start":296,"line_end":296,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323232,"byte_end":323241,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323339,"byte_end":323355,"line_start":303,"line_end":303,"column_start":8,"column_end":24},"name":"try_isize_or_max","qualname":"::util::num::Integer::try_isize_or_max","value":"fn (self) -> isize","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323322,"byte_end":323331,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323455,"byte_end":323468,"line_start":310,"line_end":310,"column_start":8,"column_end":21},"name":"try_u8_or_min","qualname":"::util::num::Integer::try_u8_or_min","value":"fn (self) -> u8","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323438,"byte_end":323447,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323541,"byte_end":323555,"line_start":315,"line_end":315,"column_start":8,"column_end":22},"name":"try_u16_or_min","qualname":"::util::num::Integer::try_u16_or_min","value":"fn (self) -> u16","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323524,"byte_end":323533,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323629,"byte_end":323643,"line_start":320,"line_end":320,"column_start":8,"column_end":22},"name":"try_u32_or_min","qualname":"::util::num::Integer::try_u32_or_min","value":"fn (self) -> u32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323612,"byte_end":323621,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323717,"byte_end":323731,"line_start":325,"line_end":325,"column_start":8,"column_end":22},"name":"try_u64_or_min","qualname":"::util::num::Integer::try_u64_or_min","value":"fn (self) -> u64","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323700,"byte_end":323709,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323826,"byte_end":323841,"line_start":331,"line_end":331,"column_start":8,"column_end":23},"name":"try_u128_or_min","qualname":"::util::num::Integer::try_u128_or_min","value":"fn (self) -> u128","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323788,"byte_end":323804,"line_start":329,"line_end":329,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323809,"byte_end":323818,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323916,"byte_end":323932,"line_start":336,"line_end":336,"column_start":8,"column_end":24},"name":"try_usize_or_min","qualname":"::util::num::Integer::try_usize_or_min","value":"fn (self) -> usize","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323899,"byte_end":323908,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324008,"byte_end":324021,"line_start":341,"line_end":341,"column_start":8,"column_end":21},"name":"try_i8_or_min","qualname":"::util::num::Integer::try_i8_or_min","value":"fn (self) -> i8","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":323991,"byte_end":324000,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324094,"byte_end":324108,"line_start":346,"line_end":346,"column_start":8,"column_end":22},"name":"try_i16_or_min","qualname":"::util::num::Integer::try_i16_or_min","value":"fn (self) -> i16","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324077,"byte_end":324086,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324182,"byte_end":324196,"line_start":351,"line_end":351,"column_start":8,"column_end":22},"name":"try_i32_or_min","qualname":"::util::num::Integer::try_i32_or_min","value":"fn (self) -> i32","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324165,"byte_end":324174,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324270,"byte_end":324284,"line_start":356,"line_end":356,"column_start":8,"column_end":22},"name":"try_i64_or_min","qualname":"::util::num::Integer::try_i64_or_min","value":"fn (self) -> i64","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324253,"byte_end":324262,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324379,"byte_end":324394,"line_start":362,"line_end":362,"column_start":8,"column_end":23},"name":"try_i128_or_min","qualname":"::util::num::Integer::try_i128_or_min","value":"fn (self) -> i128","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324341,"byte_end":324357,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324362,"byte_end":324371,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324469,"byte_end":324485,"line_start":367,"line_end":367,"column_start":8,"column_end":24},"name":"try_isize_or_min","qualname":"::util::num::Integer::try_isize_or_min","value":"fn (self) -> isize","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":324452,"byte_end":324461,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330213,"byte_end":330226,"line_start":587,"line_end":587,"column_start":11,"column_end":24},"name":"SignedInteger","qualname":"::util::num::SignedInteger","value":"SignedInteger: Integer + ops::Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":" Defines a trait that supports signed integral operations.\n","sig":null,"attributes":[{"value":"/ Defines a trait that supports signed integral operations.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330126,"byte_end":330187,"line_start":585,"line_end":585,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330298,"byte_end":330309,"line_start":590,"line_end":590,"column_start":8,"column_end":19},"name":"checked_abs","qualname":"::util::num::SignedInteger::checked_abs","value":"fn (self) -> Option<Self>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330340,"byte_end":330352,"line_start":591,"line_end":591,"column_start":8,"column_end":20},"name":"wrapping_abs","qualname":"::util::num::SignedInteger::wrapping_abs","value":"fn (self) -> Self","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330375,"byte_end":330390,"line_start":592,"line_end":592,"column_start":8,"column_end":23},"name":"overflowing_abs","qualname":"::util::num::SignedInteger::overflowing_abs","value":"fn (self) -> (Self, bool)","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331049,"byte_end":331064,"line_start":620,"line_end":620,"column_start":11,"column_end":26},"name":"UnsignedInteger","qualname":"::util::num::UnsignedInteger","value":"UnsignedInteger: Integer","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" Defines a trait that supports unsigned integral operations.\n","sig":null,"attributes":[{"value":"/ Defines a trait that supports unsigned integral operations.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330960,"byte_end":331023,"line_start":618,"line_end":618,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331155,"byte_end":331161,"line_start":624,"line_end":624,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::util::num::UnsignedInteger::is_odd","value":"fn (self) -> bool","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Returns true if the least-significant bit is odd.\n","sig":null,"attributes":[{"value":"/ Returns true if the least-significant bit is odd.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331080,"byte_end":331133,"line_start":622,"line_end":622,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331138,"byte_end":331147,"line_start":623,"line_end":623,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331303,"byte_end":331310,"line_start":630,"line_end":630,"column_start":8,"column_end":15},"name":"is_even","qualname":"::util::num::UnsignedInteger::is_even","value":"fn (self) -> bool","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Returns true if the least-significant bit is even.\n","sig":null,"attributes":[{"value":"/ Returns true if the least-significant bit is even.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331227,"byte_end":331281,"line_start":628,"line_end":628,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331286,"byte_end":331295,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":284},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331648,"byte_end":331653,"line_start":648,"line_end":648,"column_start":11,"column_end":16},"name":"Float","qualname":"::util::num::Float","value":"Float: Number + ops::Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"decl_id":null,"docs":" Float information for native float types.\n","sig":null,"attributes":[{"value":"/ Float information for native float types.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331577,"byte_end":331622,"line_start":646,"line_end":646,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":285},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331737,"byte_end":331745,"line_start":651,"line_end":651,"column_start":10,"column_end":18},"name":"Unsigned","qualname":"::util::num::Float::Unsigned","value":"type Unsigned: UnsignedInteger;","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Unsigned type of the same size.\n","sig":null,"attributes":[{"value":"/ Unsigned type of the same size.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331692,"byte_end":331727,"line_start":650,"line_end":650,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":286},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331792,"byte_end":331796,"line_start":654,"line_end":654,"column_start":11,"column_end":15},"name":"ZERO","qualname":"::util::num::Float::ZERO","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":287},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331814,"byte_end":331817,"line_start":655,"line_end":655,"column_start":11,"column_end":14},"name":"ONE","qualname":"::util::num::Float::ONE","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":288},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331835,"byte_end":331838,"line_start":656,"line_end":656,"column_start":11,"column_end":14},"name":"TWO","qualname":"::util::num::Float::TWO","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":289},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331856,"byte_end":331859,"line_start":657,"line_end":657,"column_start":11,"column_end":14},"name":"MAX","qualname":"::util::num::Float::MAX","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":290},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331877,"byte_end":331880,"line_start":658,"line_end":658,"column_start":11,"column_end":14},"name":"MIN","qualname":"::util::num::Float::MIN","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":291},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331898,"byte_end":331906,"line_start":659,"line_end":659,"column_start":11,"column_end":19},"name":"INFINITY","qualname":"::util::num::Float::INFINITY","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":292},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331924,"byte_end":331936,"line_start":660,"line_end":660,"column_start":11,"column_end":23},"name":"NEG_INFINITY","qualname":"::util::num::Float::NEG_INFINITY","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":293},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331954,"byte_end":331957,"line_start":661,"line_end":661,"column_start":11,"column_end":14},"name":"NAN","qualname":"::util::num::Float::NAN","value":"Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":294},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331975,"byte_end":331979,"line_start":662,"line_end":662,"column_start":11,"column_end":15},"name":"BITS","qualname":"::util::num::Float::BITS","value":"usize","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":295},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332033,"byte_end":332042,"line_start":665,"line_end":665,"column_start":11,"column_end":20},"name":"SIGN_MASK","qualname":"::util::num::Float::SIGN_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Bitmask for the sign bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the sign bit.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331993,"byte_end":332022,"line_start":664,"line_end":664,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":296},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332130,"byte_end":332143,"line_start":667,"line_end":667,"column_start":11,"column_end":24},"name":"EXPONENT_MASK","qualname":"::util::num::Float::EXPONENT_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Bitmask for the exponent, including the hidden bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the exponent, including the hidden bit.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332064,"byte_end":332119,"line_start":666,"line_end":666,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":297},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332259,"byte_end":332274,"line_start":669,"line_end":669,"column_start":11,"column_end":26},"name":"HIDDEN_BIT_MASK","qualname":"::util::num::Float::HIDDEN_BIT_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Bitmask for the hidden bit in exponent, which is an implicit 1 in the fraction.\n","sig":null,"attributes":[{"value":"/ Bitmask for the hidden bit in exponent, which is an implicit 1 in the fraction.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332165,"byte_end":332248,"line_start":668,"line_end":668,"column_start":5,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":298},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332373,"byte_end":332386,"line_start":671,"line_end":671,"column_start":11,"column_end":24},"name":"MANTISSA_MASK","qualname":"::util::num::Float::MANTISSA_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Bitmask for the mantissa (fraction), excluding the hidden bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the mantissa (fraction), excluding the hidden bit.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332296,"byte_end":332362,"line_start":670,"line_end":670,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":299},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332469,"byte_end":332482,"line_start":676,"line_end":676,"column_start":11,"column_end":24},"name":"INFINITY_BITS","qualname":"::util::num::Float::INFINITY_BITS","value":"Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Positive infinity as bits.\n","sig":null,"attributes":[{"value":"/ Positive infinity as bits.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332428,"byte_end":332458,"line_start":675,"line_end":675,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":300},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332545,"byte_end":332567,"line_start":678,"line_end":678,"column_start":11,"column_end":33},"name":"NEGATIVE_INFINITY_BITS","qualname":"::util::num::Float::NEGATIVE_INFINITY_BITS","value":"Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Positive infinity as bits.\n","sig":null,"attributes":[{"value":"/ Positive infinity as bits.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332504,"byte_end":332534,"line_start":677,"line_end":677,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":301},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332658,"byte_end":332671,"line_start":680,"line_end":680,"column_start":11,"column_end":24},"name":"MANTISSA_SIZE","qualname":"::util::num::Float::MANTISSA_SIZE","value":"i32","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Size of the significand (mantissa) without hidden bit.\n","sig":null,"attributes":[{"value":"/ Size of the significand (mantissa) without hidden bit.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332589,"byte_end":332647,"line_start":679,"line_end":679,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":302},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332716,"byte_end":332729,"line_start":682,"line_end":682,"column_start":11,"column_end":24},"name":"EXPONENT_BIAS","qualname":"::util::num::Float::EXPONENT_BIAS","value":"i32","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Bias of the exponet\n","sig":null,"attributes":[{"value":"/ Bias of the exponet","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332682,"byte_end":332705,"line_start":681,"line_end":681,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":303},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332792,"byte_end":332809,"line_start":684,"line_end":684,"column_start":11,"column_end":28},"name":"DENORMAL_EXPONENT","qualname":"::util::num::Float::DENORMAL_EXPONENT","value":"i32","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Exponent portion of a denormal float.\n","sig":null,"attributes":[{"value":"/ Exponent portion of a denormal float.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332740,"byte_end":332781,"line_start":683,"line_end":683,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":304},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332867,"byte_end":332879,"line_start":686,"line_end":686,"column_start":11,"column_end":23},"name":"MAX_EXPONENT","qualname":"::util::num::Float::MAX_EXPONENT","value":"i32","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Maximum exponent value in float.\n","sig":null,"attributes":[{"value":"/ Maximum exponent value in float.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332820,"byte_end":332856,"line_start":685,"line_end":685,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332971,"byte_end":332974,"line_start":691,"line_end":691,"column_start":8,"column_end":11},"name":"abs","qualname":"::util::num::Float::abs","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":332997,"byte_end":333001,"line_start":692,"line_end":692,"column_start":8,"column_end":12},"name":"ceil","qualname":"::util::num::Float::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333024,"byte_end":333027,"line_start":693,"line_end":693,"column_start":8,"column_end":11},"name":"exp","qualname":"::util::num::Float::exp","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333050,"byte_end":333055,"line_start":694,"line_end":694,"column_start":8,"column_end":13},"name":"floor","qualname":"::util::num::Float::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333078,"byte_end":333080,"line_start":695,"line_end":695,"column_start":8,"column_end":10},"name":"ln","qualname":"::util::num::Float::ln","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333103,"byte_end":333107,"line_start":696,"line_end":696,"column_start":8,"column_end":12},"name":"powi","qualname":"::util::num::Float::powi","value":"fn (self, n: i32) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333138,"byte_end":333142,"line_start":697,"line_end":697,"column_start":8,"column_end":12},"name":"powf","qualname":"::util::num::Float::powf","value":"fn (self, f: Self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333174,"byte_end":333179,"line_start":698,"line_end":698,"column_start":8,"column_end":13},"name":"round","qualname":"::util::num::Float::round","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333202,"byte_end":333209,"line_start":699,"line_end":699,"column_start":8,"column_end":15},"name":"to_bits","qualname":"::util::num::Float::to_bits","value":"fn (self) -> Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333242,"byte_end":333251,"line_start":700,"line_end":700,"column_start":8,"column_end":17},"name":"from_bits","qualname":"::util::num::Float::from_bits","value":"fn (u: Self::Unsigned) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333287,"byte_end":333303,"line_start":701,"line_end":701,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::util::num::Float::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333326,"byte_end":333342,"line_start":702,"line_end":702,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::util::num::Float::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333439,"byte_end":333446,"line_start":708,"line_end":708,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::util::num::Float::is_zero","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Check if value is equal to zero.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to zero.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333381,"byte_end":333417,"line_start":706,"line_end":706,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333422,"byte_end":333431,"line_start":707,"line_end":707,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333668,"byte_end":333674,"line_start":716,"line_end":716,"column_start":8,"column_end":14},"name":"is_one","qualname":"::util::num::Float::is_one","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Check if value is equal to one.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to one.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333611,"byte_end":333646,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333651,"byte_end":333660,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333794,"byte_end":333805,"line_start":722,"line_end":722,"column_start":8,"column_end":19},"name":"is_denormal","qualname":"::util::num::Float::is_denormal","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Returns true if the float is a denormal.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is a denormal.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333728,"byte_end":333772,"line_start":720,"line_end":720,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333777,"byte_end":333786,"line_start":721,"line_end":721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333975,"byte_end":333985,"line_start":728,"line_end":728,"column_start":8,"column_end":18},"name":"is_special","qualname":"::util::num::Float::is_special","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Returns true if the float is a NaN or Infinite.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is a NaN or Infinite.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333902,"byte_end":333953,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":333958,"byte_end":333967,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334140,"byte_end":334146,"line_start":734,"line_end":734,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::util::num::Float::is_nan","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Returns true if the float is NaN.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is NaN.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334081,"byte_end":334118,"line_start":732,"line_end":732,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334123,"byte_end":334132,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334317,"byte_end":334323,"line_start":740,"line_end":740,"column_start":8,"column_end":14},"name":"is_inf","qualname":"::util::num::Float::is_inf","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Returns true if the float is infinite.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is infinite.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334253,"byte_end":334295,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334300,"byte_end":334309,"line_start":739,"line_end":739,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334521,"byte_end":334527,"line_start":746,"line_end":746,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::util::num::Float::is_odd","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Returns true if the float's least-significant mantissa bit is odd.\n","sig":null,"attributes":[{"value":"/ Returns true if the float's least-significant mantissa bit is odd.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334429,"byte_end":334499,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334504,"byte_end":334513,"line_start":745,"line_end":745,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334680,"byte_end":334687,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"is_even","qualname":"::util::num::Float::is_even","value":"fn (self) -> bool","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Returns true if the float's least-significant mantissa bit is even.\n","sig":null,"attributes":[{"value":"/ Returns true if the float's least-significant mantissa bit is even.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334587,"byte_end":334658,"line_start":750,"line_end":750,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334663,"byte_end":334672,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334802,"byte_end":334810,"line_start":758,"line_end":758,"column_start":8,"column_end":16},"name":"exponent","qualname":"::util::num::Float::exponent","value":"fn (self) -> i32","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get exponent component from the float.\n","sig":null,"attributes":[{"value":"/ Get exponent component from the float.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334738,"byte_end":334780,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":334785,"byte_end":334794,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335170,"byte_end":335178,"line_start":770,"line_end":770,"column_start":8,"column_end":16},"name":"mantissa","qualname":"::util::num::Float::mantissa","value":"fn (self) -> Self::Unsigned","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get mantissa (significand) component from float.\n","sig":null,"attributes":[{"value":"/ Get mantissa (significand) component from float.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335096,"byte_end":335148,"line_start":768,"line_end":768,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335153,"byte_end":335162,"line_start":769,"line_end":769,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335456,"byte_end":335460,"line_start":782,"line_end":782,"column_start":8,"column_end":12},"name":"next","qualname":"::util::num::Float::next","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get next greater float.\n","sig":null,"attributes":[{"value":"/ Get next greater float.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335407,"byte_end":335434,"line_start":780,"line_end":780,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335439,"byte_end":335448,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336044,"byte_end":336057,"line_start":799,"line_end":799,"column_start":8,"column_end":21},"name":"next_positive","qualname":"::util::num::Float::next_positive","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get next greater float for a positive float.\n Value must be >= 0.0 and < INFINITY.\n","sig":null,"attributes":[{"value":"/ Get next greater float for a positive float.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335929,"byte_end":335977,"line_start":796,"line_end":796,"column_start":5,"column_end":53}},{"value":"/ Value must be >= 0.0 and < INFINITY.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":335982,"byte_end":336022,"line_start":797,"line_end":797,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336027,"byte_end":336036,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336306,"byte_end":336310,"line_start":806,"line_end":806,"column_start":8,"column_end":12},"name":"prev","qualname":"::util::num::Float::prev","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get previous greater float, such that `self.prev().next() == self`.\n","sig":null,"attributes":[{"value":"/ Get previous greater float, such that `self.prev().next() == self`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336213,"byte_end":336284,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336289,"byte_end":336298,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336901,"byte_end":336914,"line_start":823,"line_end":823,"column_start":8,"column_end":21},"name":"prev_positive","qualname":"::util::num::Float::prev_positive","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get previous greater float for a positive float.\n Value must be > 0.0.\n","sig":null,"attributes":[{"value":"/ Get previous greater float for a positive float.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336798,"byte_end":336850,"line_start":820,"line_end":820,"column_start":5,"column_end":57}},{"value":"/ Value must be > 0.0.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336855,"byte_end":336879,"line_start":821,"line_end":821,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":336884,"byte_end":336893,"line_start":822,"line_end":822,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337137,"byte_end":337156,"line_start":830,"line_end":830,"column_start":8,"column_end":27},"name":"round_positive_even","qualname":"::util::num::Float::round_positive_even","value":"fn (self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Round a positive number to even.\n","sig":null,"attributes":[{"value":"/ Round a positive number to even.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337079,"byte_end":337115,"line_start":828,"line_end":828,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337120,"byte_end":337129,"line_start":829,"line_end":829,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337359,"byte_end":337369,"line_start":840,"line_end":840,"column_start":8,"column_end":18},"name":"max_finite","qualname":"::util::num::Float::max_finite","value":"fn (self, f: Self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get the max of two finite numbers.\n","sig":null,"attributes":[{"value":"/ Get the max of two finite numbers.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337299,"byte_end":337337,"line_start":838,"line_end":838,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337342,"byte_end":337351,"line_start":839,"line_end":839,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337605,"byte_end":337615,"line_start":847,"line_end":847,"column_start":8,"column_end":18},"name":"min_finite","qualname":"::util::num::Float::min_finite","value":"fn (self, f: Self) -> Self","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Get the min of two finite numbers.\n","sig":null,"attributes":[{"value":"/ Get the min of two finite numbers.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337545,"byte_end":337583,"line_start":845,"line_end":845,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":337588,"byte_end":337597,"line_start":846,"line_end":846,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":420},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352911,"byte_end":352922,"line_start":7,"line_end":7,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::util::primitive::AsPrimitive","value":"AsPrimitive: Copy + PartialEq + PartialOrd + Send + Sync","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"decl_id":null,"docs":" Type that can be converted to primitive with `as`.\n","sig":null,"attributes":[{"value":"/ Type that can be converted to primitive with `as`.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352846,"byte_end":352900,"line_start":6,"line_end":6,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352977,"byte_end":352982,"line_start":8,"line_end":8,"column_start":8,"column_end":13},"name":"as_u8","qualname":"::util::primitive::AsPrimitive::as_u8","value":"fn (self) -> u8","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353003,"byte_end":353009,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"as_u16","qualname":"::util::primitive::AsPrimitive::as_u16","value":"fn (self) -> u16","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353031,"byte_end":353037,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"as_u32","qualname":"::util::primitive::AsPrimitive::as_u32","value":"fn (self) -> u32","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353059,"byte_end":353065,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"as_u64","qualname":"::util::primitive::AsPrimitive::as_u64","value":"fn (self) -> u64","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353087,"byte_end":353095,"line_start":12,"line_end":12,"column_start":8,"column_end":16},"name":"as_usize","qualname":"::util::primitive::AsPrimitive::as_usize","value":"fn (self) -> usize","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353119,"byte_end":353124,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"as_i8","qualname":"::util::primitive::AsPrimitive::as_i8","value":"fn (self) -> i8","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353145,"byte_end":353151,"line_start":14,"line_end":14,"column_start":8,"column_end":14},"name":"as_i16","qualname":"::util::primitive::AsPrimitive::as_i16","value":"fn (self) -> i16","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353173,"byte_end":353179,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"as_i32","qualname":"::util::primitive::AsPrimitive::as_i32","value":"fn (self) -> i32","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353201,"byte_end":353207,"line_start":16,"line_end":16,"column_start":8,"column_end":14},"name":"as_i64","qualname":"::util::primitive::AsPrimitive::as_i64","value":"fn (self) -> i64","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353229,"byte_end":353237,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"as_isize","qualname":"::util::primitive::AsPrimitive::as_isize","value":"fn (self) -> isize","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353261,"byte_end":353267,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"as_f32","qualname":"::util::primitive::AsPrimitive::as_f32","value":"fn (self) -> f32","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353289,"byte_end":353295,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"as_f64","qualname":"::util::primitive::AsPrimitive::as_f64","value":"fn (self) -> f64","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353339,"byte_end":353346,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"as_u128","qualname":"::util::primitive::AsPrimitive::as_u128","value":"fn (self) -> u128","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353315,"byte_end":353331,"line_start":21,"line_end":21,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353391,"byte_end":353398,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"as_i128","qualname":"::util::primitive::AsPrimitive::as_i128","value":"fn (self) -> i128","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":353367,"byte_end":353383,"line_start":24,"line_end":24,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":438},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":357531,"byte_end":357540,"line_start":209,"line_end":209,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::util::primitive::Primitive","value":"Primitive: 'static + fmt::Debug + fmt::Display + TryPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Primitive type trait (which all have static lifetimes).\n","sig":null,"attributes":[{"value":"/ Primitive type trait (which all have static lifetimes).","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":357461,"byte_end":357520,"line_start":208,"line_end":208,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":483},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/result.rs","byte_start":371683,"byte_end":371689,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Result","qualname":"::util::result::Result","value":"StdResult<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized Result type for lexical operations.\n","sig":null,"attributes":[{"value":"/ A specialized Result type for lexical operations.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/result.rs","byte_start":371620,"byte_end":371673,"line_start":6,"line_end":6,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8841528,"byte_end":8841534,"line_start":159,"line_end":159,"column_start":10,"column_end":16},"name":"Output","qualname":"::util::sequence::RSliceIndex::Output","value":"type Output: ?Sized;","parent":{"krate":0,"index":2479},"children":[],"decl_id":null,"docs":" Output type for the index.\n","sig":null,"attributes":[{"value":"/ Output type for the index.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8841488,"byte_end":8841518,"line_start":158,"line_end":158,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":581},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":781743,"byte_end":781754,"line_start":147,"line_end":147,"column_start":10,"column_end":21},"name":"IntegerIter","qualname":"::atof::algorithm::format::traits::FastDataInterface::IntegerIter","value":"type IntegerIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" Integer digits iterator type.\n","sig":null,"attributes":[{"value":"/ Integer digits iterator type.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":781700,"byte_end":781733,"line_start":146,"line_end":146,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":582},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":781857,"byte_end":781869,"line_start":150,"line_end":150,"column_start":10,"column_end":22},"name":"FractionIter","qualname":"::atof::algorithm::format::traits::FastDataInterface::FractionIter","value":"type FractionIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" Float digits iterator type.\n","sig":null,"attributes":[{"value":"/ Float digits iterator type.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":781816,"byte_end":781847,"line_start":149,"line_end":149,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":583},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":781975,"byte_end":781987,"line_start":153,"line_end":153,"column_start":10,"column_end":22},"name":"ExponentIter","qualname":"::atof::algorithm::format::traits::FastDataInterface::ExponentIter","value":"type ExponentIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" Exponent digits iterator type.\n","sig":null,"attributes":[{"value":"/ Exponent digits iterator type.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":781931,"byte_end":781965,"line_start":152,"line_end":152,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":584},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":782121,"byte_end":782134,"line_start":157,"line_end":157,"column_start":10,"column_end":23},"name":"SlowInterface","qualname":"::atof::algorithm::format::traits::FastDataInterface::SlowInterface","value":"type SlowInterface: SlowDataInterface<'a>;","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" Associated slow data type.\n","sig":null,"attributes":[{"value":"/ Associated slow data type.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":782049,"byte_end":782079,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"correct\")","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":782084,"byte_end":782111,"line_start":156,"line_end":156,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":605},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":793958,"byte_end":793969,"line_start":495,"line_end":495,"column_start":10,"column_end":21},"name":"IntegerIter","qualname":"::atof::algorithm::format::traits::SlowDataInterface::IntegerIter","value":"type IntegerIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":" Integer digits iterator type.\n","sig":null,"attributes":[{"value":"/ Integer digits iterator type.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":793915,"byte_end":793948,"line_start":494,"line_end":494,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":606},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":794072,"byte_end":794084,"line_start":498,"line_end":498,"column_start":10,"column_end":22},"name":"FractionIter","qualname":"::atof::algorithm::format::traits::SlowDataInterface::FractionIter","value":"type FractionIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":" Float digits iterator type.\n","sig":null,"attributes":[{"value":"/ Float digits iterator type.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":794031,"byte_end":794062,"line_start":497,"line_end":497,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8957036,"byte_end":8957044,"line_start":17,"line_end":17,"column_start":10,"column_end":18},"name":"Mantissa","qualname":"::atof::algorithm::alias::FloatType::Mantissa","value":"type Mantissa: Mantissa;","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8957065,"byte_end":8957078,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"ExtendedFloat","qualname":"::atof::algorithm::alias::FloatType::ExtendedFloat","value":"type ExtendedFloat: ExtendedFloatType<Self>;","parent":{"krate":0,"index":2940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3124},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9254190,"byte_end":9254201,"line_start":2261,"line_end":2261,"column_start":10,"column_end":21},"name":"StorageType","qualname":"::atof::algorithm::math::SharedOps::StorageType","value":"type StorageType: CloneableVecLike<Limb>;","parent":{"krate":0,"index":3123},"children":[],"decl_id":null,"docs":" Underlying storage type for a SmallOps.\n","sig":null,"attributes":[{"value":"/ Underlying storage type for a SmallOps.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9254137,"byte_end":9254180,"line_start":2260,"line_end":2260,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":791},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":9313,"byte_end":9318,"line_start":236,"line_end":236,"column_start":8,"column_end":13},"name":"write","qualname":"::write","value":"fn <'a, N> (n: N, bytes: &'a mut [u8]) -> &'a mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Write number to string.","sig":null,"attributes":[{"value":"/ Write number to string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8709,"byte_end":8736,"line_start":220,"line_end":220,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8737,"byte_end":8740,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Returns a subslice of the input buffer containing the written bytes,","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8741,"byte_end":8813,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ starting from the same address in memory as the input slice.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8814,"byte_end":8878,"line_start":223,"line_end":223,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8879,"byte_end":8882,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ * `value`   - Number to serialize.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8883,"byte_end":8921,"line_start":225,"line_end":225,"column_start":1,"column_end":39}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8922,"byte_end":8974,"line_start":226,"line_end":226,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8975,"byte_end":8978,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8979,"byte_end":8991,"line_start":228,"line_end":228,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8992,"byte_end":8995,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer may not be large enough to hold the serialized","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":8996,"byte_end":9067,"line_start":230,"line_end":230,"column_start":1,"column_end":72}},{"value":"/ number. In order to ensure the function will not panic, provide a","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":9068,"byte_end":9137,"line_start":231,"line_end":231,"column_start":1,"column_end":70}},{"value":"/ buffer with at least [`FORMATTED_SIZE_DECIMAL`] elements.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":9138,"byte_end":9199,"line_start":232,"line_end":232,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":9200,"byte_end":9203,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ [`FORMATTED_SIZE_DECIMAL`]: trait.Number.html#associatedconstant.FORMATTED_SIZE_DECIMAL","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":9204,"byte_end":9295,"line_start":234,"line_end":234,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":9296,"byte_end":9305,"line_start":235,"line_end":235,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":794},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10504,"byte_end":10509,"line_start":275,"line_end":275,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"fn <N> (bytes: &[u8]) -> Result<N>","parent":null,"children":[],"decl_id":null,"docs":" Parse number from string.","sig":null,"attributes":[{"value":"/ Parse number from string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10278,"byte_end":10307,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10308,"byte_end":10311,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10312,"byte_end":10375,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/ any invalid digits are found during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10376,"byte_end":10424,"line_start":271,"line_end":271,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10425,"byte_end":10428,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10429,"byte_end":10486,"line_start":273,"line_end":273,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10487,"byte_end":10496,"line_start":274,"line_end":274,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":796},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10873,"byte_end":10886,"line_start":289,"line_end":289,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parse_partial","value":"fn <N> (bytes: &[u8]) -> Result<(N, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Parse number from string.","sig":null,"attributes":[{"value":"/ Parse number from string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10589,"byte_end":10618,"line_start":281,"line_end":281,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10619,"byte_end":10622,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10623,"byte_end":10689,"line_start":283,"line_end":283,"column_start":1,"column_end":67}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10690,"byte_end":10750,"line_start":284,"line_end":284,"column_start":1,"column_end":61}},{"value":"/ and the parsed value until that point.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10751,"byte_end":10793,"line_start":285,"line_end":285,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10794,"byte_end":10797,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10798,"byte_end":10855,"line_start":287,"line_end":287,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10856,"byte_end":10865,"line_start":288,"line_end":288,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":798},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11291,"byte_end":11302,"line_start":303,"line_end":303,"column_start":8,"column_end":19},"name":"parse_lossy","qualname":"::parse_lossy","value":"fn <N> (bytes: &[u8]) -> Result<N>","parent":null,"children":[],"decl_id":null,"docs":" Lossily parse number from string.","sig":null,"attributes":[{"value":"/ Lossily parse number from string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":10983,"byte_end":11020,"line_start":295,"line_end":295,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11021,"byte_end":11024,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11025,"byte_end":11088,"line_start":297,"line_end":297,"column_start":1,"column_end":64}},{"value":"/ any invalid digits are found during parsing. This parser is","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11089,"byte_end":11152,"line_start":298,"line_end":298,"column_start":1,"column_end":64}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11153,"byte_end":11211,"line_start":299,"line_end":299,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11212,"byte_end":11215,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11216,"byte_end":11273,"line_start":301,"line_end":301,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11274,"byte_end":11283,"line_start":302,"line_end":302,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":800},"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11759,"byte_end":11778,"line_start":318,"line_end":318,"column_start":8,"column_end":27},"name":"parse_partial_lossy","qualname":"::parse_partial_lossy","value":"fn <N> (bytes: &[u8]) -> Result<(N, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Lossily parse number from string.","sig":null,"attributes":[{"value":"/ Lossily parse number from string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11393,"byte_end":11430,"line_start":309,"line_end":309,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11431,"byte_end":11434,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11435,"byte_end":11501,"line_start":311,"line_end":311,"column_start":1,"column_end":67}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11502,"byte_end":11562,"line_start":312,"line_end":312,"column_start":1,"column_end":61}},{"value":"/ and the parsed value until that point. This parser is","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11563,"byte_end":11620,"line_start":313,"line_end":313,"column_start":1,"column_end":58}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11621,"byte_end":11679,"line_start":314,"line_end":314,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11680,"byte_end":11683,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11684,"byte_end":11741,"line_start":316,"line_end":316,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/lib.rs","byte_start":11742,"byte_end":11751,"line_start":317,"line_end":317,"column_start":1,"column_end":10}}]}],"impls":[{"id":210,"kind":"Inherent","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":103869,"byte_end":103886,"line_start":68,"line_end":68,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":198173,"byte_end":198178,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":198316,"byte_end":198321,"line_start":90,"line_end":90,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211538,"byte_end":211550,"line_start":693,"line_end":693,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/iterator.rs","byte_start":308958,"byte_end":308959,"line_start":19,"line_end":19,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/iterator.rs","byte_start":309457,"byte_end":309461,"line_start":36,"line_end":36,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8843360,"byte_end":8843371,"line_start":227,"line_end":227,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8843668,"byte_end":8843682,"line_start":243,"line_end":243,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8843853,"byte_end":8843867,"line_start":252,"line_end":252,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8844897,"byte_end":8844905,"line_start":303,"line_end":303,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8845439,"byte_end":8845452,"line_start":325,"line_end":325,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8845868,"byte_end":8845881,"line_start":340,"line_end":340,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8846295,"byte_end":8846308,"line_start":355,"line_end":355,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8846734,"byte_end":8846747,"line_start":370,"line_end":370,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8847116,"byte_end":8847129,"line_start":385,"line_end":385,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8847531,"byte_end":8847544,"line_start":400,"line_end":400,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8847963,"byte_end":8847976,"line_start":415,"line_end":415,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8848410,"byte_end":8848423,"line_start":430,"line_end":430,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8867203,"byte_end":8867211,"line_start":1084,"line_end":1084,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2691},{"krate":0,"index":2693},{"krate":0,"index":2695},{"krate":0,"index":2697},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8873713,"byte_end":8873721,"line_start":1336,"line_end":1336,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8876440,"byte_end":8876448,"line_start":1448,"line_end":1448,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/standard.rs","byte_start":802102,"byte_end":802127,"line_start":52,"line_end":52,"column_start":34,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8958185,"byte_end":8958198,"line_start":67,"line_end":67,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8958582,"byte_end":8958595,"line_start":89,"line_end":89,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8960868,"byte_end":8960874,"line_start":88,"line_end":88,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8961089,"byte_end":8961095,"line_start":97,"line_end":97,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2968},{"krate":0,"index":3233},{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8961394,"byte_end":8961400,"line_start":111,"line_end":111,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8961424,"byte_end":8961430,"line_start":114,"line_end":114,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962180,"byte_end":8962188,"line_start":141,"line_end":141,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962445,"byte_end":8962453,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":3252},{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962754,"byte_end":8962762,"line_start":165,"line_end":165,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962951,"byte_end":8962959,"line_start":173,"line_end":173,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8963162,"byte_end":8963175,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8963389,"byte_end":8963402,"line_start":192,"line_end":192,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8963634,"byte_end":8963647,"line_start":202,"line_end":202,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8964827,"byte_end":8964845,"line_start":21,"line_end":21,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8965778,"byte_end":8965796,"line_start":55,"line_end":55,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8966462,"byte_end":8966475,"line_start":80,"line_end":80,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8966676,"byte_end":8966689,"line_start":88,"line_end":88,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/convert.rs","byte_start":966741,"byte_end":966754,"line_start":80,"line_end":80,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/convert.rs","byte_start":966997,"byte_end":967010,"line_start":88,"line_end":88,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3727}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/float.rs","byte_start":968662,"byte_end":968675,"line_start":33,"line_end":33,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3792},{"krate":0,"index":3793}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/float.rs","byte_start":979773,"byte_end":979786,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3794}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":26902,"byte_end":26908,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":30653,"byte_end":30664,"line_start":130,"line_end":130,"column_start":29,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":26},"to":{"krate":0,"index":30}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/traits.rs","byte_start":44656,"byte_end":44662,"line_start":476,"line_end":476,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":64787,"byte_end":64798,"line_start":19,"line_end":19,"column_start":19,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":420},"to":{"krate":0,"index":75}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/cast.rs","byte_start":65847,"byte_end":65852,"line_start":65,"line_end":65,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":82}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/config.rs","byte_start":103869,"byte_end":103886,"line_start":68,"line_end":68,"column_start":6,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":198173,"byte_end":198178,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/error.rs","byte_start":198316,"byte_end":198321,"line_start":90,"line_end":90,"column_start":35,"column_end":40},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/format.rs","byte_start":211538,"byte_end":211550,"line_start":693,"line_end":693,"column_start":10,"column_end":22},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/iterator.rs","byte_start":308814,"byte_end":308822,"line_start":14,"line_end":14,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":4716},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/iterator.rs","byte_start":308958,"byte_end":308959,"line_start":19,"line_end":19,"column_start":49,"column_end":50},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":145},"to":{"krate":0,"index":142}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/iterator.rs","byte_start":309308,"byte_end":309316,"line_start":31,"line_end":31,"column_start":44,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":4716},"to":{"krate":0,"index":147}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/iterator.rs","byte_start":309457,"byte_end":309461,"line_start":36,"line_end":36,"column_start":45,"column_end":49},"kind":{"Impl":{"id":215}},"from":{"krate":2,"index":6598},"to":{"krate":0,"index":147}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315462,"byte_end":315471,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":438},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315501,"byte_end":315508,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":4587},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315517,"byte_end":315520,"line_start":20,"line_end":20,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":4583},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315550,"byte_end":315553,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315578,"byte_end":315587,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1948},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315599,"byte_end":315602,"line_start":24,"line_end":24,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1930},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315627,"byte_end":315636,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1960},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315648,"byte_end":315651,"line_start":26,"line_end":26,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1925},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315676,"byte_end":315685,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1956},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315697,"byte_end":315700,"line_start":28,"line_end":28,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1936},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315725,"byte_end":315734,"line_start":29,"line_end":29,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1964},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315746,"byte_end":315749,"line_start":30,"line_end":30,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1920},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":315774,"byte_end":315783,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":1952},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317471,"byte_end":317477,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317480,"byte_end":317482,"line_start":77,"line_end":77,"column_start":14,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317485,"byte_end":317488,"line_start":77,"line_end":77,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1614},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317515,"byte_end":317520,"line_start":79,"line_end":79,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":5923},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317528,"byte_end":317536,"line_start":79,"line_end":79,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":5927},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317544,"byte_end":317552,"line_start":79,"line_end":79,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":5929},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317581,"byte_end":317587,"line_start":81,"line_end":81,"column_start":10,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1973},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317612,"byte_end":317624,"line_start":82,"line_end":82,"column_start":10,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2000},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317636,"byte_end":317641,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":1978},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317666,"byte_end":317677,"line_start":84,"line_end":84,"column_start":10,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2004},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317689,"byte_end":317695,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317720,"byte_end":317732,"line_start":86,"line_end":86,"column_start":10,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2008},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317744,"byte_end":317747,"line_start":87,"line_end":87,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1969},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317759,"byte_end":317762,"line_start":88,"line_end":88,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317793,"byte_end":317796,"line_start":89,"line_end":89,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317825,"byte_end":317828,"line_start":90,"line_end":90,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317858,"byte_end":317861,"line_start":91,"line_end":91,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317891,"byte_end":317894,"line_start":92,"line_end":92,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317924,"byte_end":317927,"line_start":93,"line_end":93,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317959,"byte_end":317962,"line_start":94,"line_end":94,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":317991,"byte_end":317994,"line_start":95,"line_end":95,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318024,"byte_end":318027,"line_start":96,"line_end":96,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318057,"byte_end":318060,"line_start":97,"line_end":97,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318092,"byte_end":318095,"line_start":98,"line_end":98,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1988},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318125,"byte_end":318134,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318152,"byte_end":318161,"line_start":100,"line_end":100,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318177,"byte_end":318186,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318203,"byte_end":318212,"line_start":102,"line_end":102,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318229,"byte_end":318238,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318255,"byte_end":318264,"line_start":104,"line_end":104,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318283,"byte_end":318292,"line_start":105,"line_end":105,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318308,"byte_end":318317,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318334,"byte_end":318343,"line_start":107,"line_end":107,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318360,"byte_end":318369,"line_start":108,"line_end":108,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318386,"byte_end":318395,"line_start":109,"line_end":109,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2012},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318414,"byte_end":318417,"line_start":110,"line_end":110,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318448,"byte_end":318451,"line_start":111,"line_end":111,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318480,"byte_end":318483,"line_start":112,"line_end":112,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318513,"byte_end":318516,"line_start":113,"line_end":113,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318546,"byte_end":318549,"line_start":114,"line_end":114,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318579,"byte_end":318582,"line_start":115,"line_end":115,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318614,"byte_end":318617,"line_start":116,"line_end":116,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318646,"byte_end":318649,"line_start":117,"line_end":117,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318679,"byte_end":318682,"line_start":118,"line_end":118,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318712,"byte_end":318715,"line_start":119,"line_end":119,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318747,"byte_end":318750,"line_start":120,"line_end":120,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1994},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318780,"byte_end":318789,"line_start":121,"line_end":121,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318807,"byte_end":318816,"line_start":122,"line_end":122,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318832,"byte_end":318841,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318858,"byte_end":318867,"line_start":124,"line_end":124,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318884,"byte_end":318893,"line_start":125,"line_end":125,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318910,"byte_end":318919,"line_start":126,"line_end":126,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318938,"byte_end":318947,"line_start":127,"line_end":127,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318963,"byte_end":318972,"line_start":128,"line_end":128,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":318989,"byte_end":318998,"line_start":129,"line_end":129,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319015,"byte_end":319024,"line_start":130,"line_end":130,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":319041,"byte_end":319050,"line_start":131,"line_end":131,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2017},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330228,"byte_end":330235,"line_start":587,"line_end":587,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":330243,"byte_end":330246,"line_start":587,"line_end":587,"column_start":41,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1942},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331066,"byte_end":331073,"line_start":620,"line_end":620,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":280}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331655,"byte_end":331661,"line_start":648,"line_end":648,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":284}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/num.rs","byte_start":331669,"byte_end":331672,"line_start":648,"line_end":648,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1942},"to":{"krate":0,"index":284}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352924,"byte_end":352928,"line_start":7,"line_end":7,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1862},"to":{"krate":0,"index":420}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352931,"byte_end":352940,"line_start":7,"line_end":7,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1588},"to":{"krate":0,"index":420}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352943,"byte_end":352953,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":420}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352956,"byte_end":352960,"line_start":7,"line_end":7,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1852},"to":{"krate":0,"index":420}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":352963,"byte_end":352967,"line_start":7,"line_end":7,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":1864},"to":{"krate":0,"index":420}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":357557,"byte_end":357562,"line_start":209,"line_end":209,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":5916},"to":{"krate":0,"index":438}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":357570,"byte_end":357577,"line_start":209,"line_end":209,"column_start":50,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":5921},"to":{"krate":0,"index":438}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/primitive.rs","byte_start":357580,"byte_end":357592,"line_start":209,"line_end":209,"column_start":60,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":2318},"to":{"krate":0,"index":438}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/pow.rs","byte_start":359239,"byte_end":359244,"line_start":17,"line_end":17,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":284},"to":{"krate":0,"index":446}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/pow.rs","byte_start":359247,"byte_end":359260,"line_start":17,"line_end":17,"column_start":47,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":506},"to":{"krate":0,"index":446}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/pow.rs","byte_start":359263,"byte_end":359273,"line_start":17,"line_end":17,"column_start":63,"column_end":73},"kind":"SuperTrait","from":{"krate":0,"index":2416},"to":{"krate":0,"index":446}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/pow.rs","byte_start":359474,"byte_end":359489,"line_start":28,"line_end":28,"column_start":40,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":446},"to":{"krate":0,"index":449}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8843360,"byte_end":8843371,"line_start":227,"line_end":227,"column_start":35,"column_end":46},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2497},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8843668,"byte_end":8843682,"line_start":243,"line_end":243,"column_start":39,"column_end":53},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2506},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8843853,"byte_end":8843867,"line_start":252,"line_end":252,"column_start":42,"column_end":56},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2506},"to":{"krate":2,"index":2103}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8844897,"byte_end":8844905,"line_start":303,"line_end":303,"column_start":63,"column_end":71},"kind":{"Impl":{"id":310}},"from":{"krate":18,"index":226},"to":{"krate":0,"index":2519}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8845439,"byte_end":8845452,"line_start":325,"line_end":325,"column_start":36,"column_end":49},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2531}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8845868,"byte_end":8845881,"line_start":340,"line_end":340,"column_start":38,"column_end":51},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2537}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8846295,"byte_end":8846308,"line_start":355,"line_end":355,"column_start":36,"column_end":49},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2543}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8846734,"byte_end":8846747,"line_start":370,"line_end":370,"column_start":34,"column_end":47},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2549}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8847116,"byte_end":8847129,"line_start":385,"line_end":385,"column_start":26,"column_end":39},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2555}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8847531,"byte_end":8847544,"line_start":400,"line_end":400,"column_start":34,"column_end":47},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2561}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8847963,"byte_end":8847976,"line_start":415,"line_end":415,"column_start":38,"column_end":51},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2567}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8848410,"byte_end":8848423,"line_start":430,"line_end":430,"column_start":36,"column_end":49},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8848606,"byte_end":8848619,"line_start":438,"line_end":438,"column_start":25,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":2519},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8867203,"byte_end":8867211,"line_start":1084,"line_end":1084,"column_start":59,"column_end":67},"kind":{"Impl":{"id":319}},"from":{"krate":18,"index":226},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8870195,"byte_end":8870202,"line_start":1197,"line_end":1197,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":1843},"to":{"krate":0,"index":2713}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8870215,"byte_end":8870227,"line_start":1198,"line_end":1198,"column_start":11,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":4620},"to":{"krate":0,"index":2713}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8870243,"byte_end":8870255,"line_start":1199,"line_end":1199,"column_start":11,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":4624},"to":{"krate":0,"index":2713}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8870267,"byte_end":8870275,"line_start":1200,"line_end":1200,"column_start":10,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":2713}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8870296,"byte_end":8870302,"line_start":1201,"line_end":1201,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":4633},"to":{"krate":0,"index":2713}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8870312,"byte_end":8870321,"line_start":1202,"line_end":1202,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":2579},"to":{"krate":0,"index":2713}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8873713,"byte_end":8873721,"line_start":1336,"line_end":1336,"column_start":57,"column_end":65},"kind":{"Impl":{"id":320}},"from":{"krate":18,"index":226},"to":{"krate":0,"index":2713}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8875782,"byte_end":8875786,"line_start":1424,"line_end":1424,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":1852},"to":{"krate":0,"index":2753}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8875789,"byte_end":8875796,"line_start":1424,"line_end":1424,"column_start":60,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":2713},"to":{"krate":0,"index":2753}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/util/sequence.rs","byte_start":8876440,"byte_end":8876448,"line_start":1448,"line_end":1448,"column_start":66,"column_end":74},"kind":{"Impl":{"id":321}},"from":{"krate":18,"index":226},"to":{"krate":0,"index":2753}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":777813,"byte_end":777818,"line_start":9,"line_end":9,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":559}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":778668,"byte_end":778673,"line_start":37,"line_end":37,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":569}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":781668,"byte_end":781689,"line_start":145,"line_end":145,"column_start":41,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":559},"to":{"krate":0,"index":579}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/traits.rs","byte_start":793883,"byte_end":793904,"line_start":493,"line_end":493,"column_start":41,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":569},"to":{"krate":0,"index":603}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/format/standard.rs","byte_start":802102,"byte_end":802127,"line_start":52,"line_end":52,"column_start":34,"column_end":59},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2819},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8956962,"byte_end":8956975,"line_start":13,"line_end":13,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":745},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8956987,"byte_end":8957000,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":745},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8957013,"byte_end":8957024,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":449},"to":{"krate":0,"index":2940}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8957591,"byte_end":8957599,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":714},"to":{"krate":0,"index":2949}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8957606,"byte_end":8957617,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":3030},"to":{"krate":0,"index":2949}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8957792,"byte_end":8957802,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":2976},"to":{"krate":0,"index":2952}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8957822,"byte_end":8957826,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1776},"to":{"krate":0,"index":2952}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8958185,"byte_end":8958198,"line_start":67,"line_end":67,"column_start":33,"column_end":46},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3728},"to":{"krate":0,"index":2952}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/alias.rs","byte_start":8958582,"byte_end":8958595,"line_start":89,"line_end":89,"column_start":33,"column_end":46},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3728},"to":{"krate":0,"index":2952}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8960868,"byte_end":8960874,"line_start":88,"line_end":88,"column_start":18,"column_end":24},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8961089,"byte_end":8961095,"line_start":97,"line_end":97,"column_start":20,"column_end":26},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3222},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8961394,"byte_end":8961400,"line_start":111,"line_end":111,"column_start":19,"column_end":25},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3222},"to":{"krate":0,"index":3129}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8961424,"byte_end":8961430,"line_start":114,"line_end":114,"column_start":19,"column_end":25},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3222},"to":{"krate":0,"index":3130}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962180,"byte_end":8962188,"line_start":141,"line_end":141,"column_start":18,"column_end":26},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3239},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962445,"byte_end":8962453,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3239},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962754,"byte_end":8962762,"line_start":165,"line_end":165,"column_start":19,"column_end":27},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3239},"to":{"krate":0,"index":3129}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8962951,"byte_end":8962959,"line_start":173,"line_end":173,"column_start":19,"column_end":27},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3239},"to":{"krate":0,"index":3130}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8963162,"byte_end":8963175,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3728},"to":{"krate":0,"index":2976}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8963389,"byte_end":8963402,"line_start":192,"line_end":192,"column_start":26,"column_end":39},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":3728},"to":{"krate":0,"index":2976}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/bignum.rs","byte_start":8963634,"byte_end":8963647,"line_start":202,"line_end":202,"column_start":27,"column_end":40},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3728},"to":{"krate":0,"index":2976}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8964827,"byte_end":8964845,"line_start":21,"line_end":21,"column_start":19,"column_end":37},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":2988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8965778,"byte_end":8965796,"line_start":55,"line_end":55,"column_start":19,"column_end":37},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8966462,"byte_end":8966475,"line_start":80,"line_end":80,"column_start":33,"column_end":46},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3728},"to":{"krate":0,"index":3003}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/cached.rs","byte_start":8966676,"byte_end":8966689,"line_start":88,"line_end":88,"column_start":34,"column_end":47},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3728},"to":{"krate":0,"index":3003}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/errors.rs","byte_start":9184955,"byte_end":9184963,"line_start":13,"line_end":13,"column_start":24,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":714},"to":{"krate":0,"index":3030}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9197966,"byte_end":9197975,"line_start":180,"line_end":180,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2579},"to":{"krate":0,"index":3043}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9200939,"byte_end":9200948,"line_start":297,"line_end":297,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2579},"to":{"krate":0,"index":3050}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9204121,"byte_end":9204130,"line_start":423,"line_end":423,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2579},"to":{"krate":0,"index":3058}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9208859,"byte_end":9208868,"line_start":604,"line_end":604,"column_start":17,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":2579},"to":{"krate":0,"index":3068}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9254107,"byte_end":9254112,"line_start":2259,"line_end":2259,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1562},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9254115,"byte_end":9254120,"line_start":2259,"line_end":2259,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9254123,"byte_end":9254130,"line_start":2259,"line_end":2259,"column_start":58,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1843},"to":{"krate":0,"index":3123}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9260434,"byte_end":9260443,"line_start":2493,"line_end":2493,"column_start":41,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":3123},"to":{"krate":0,"index":3129}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/algorithm/math.rs","byte_start":9268646,"byte_end":9268654,"line_start":2830,"line_end":2830,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":3129},"to":{"krate":0,"index":3130}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atof/api.rs","byte_start":855356,"byte_end":855361,"line_start":19,"line_end":19,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":284},"to":{"krate":0,"index":653}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/atoi/api.rs","byte_start":905927,"byte_end":905934,"line_start":9,"line_end":9,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":667}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/convert.rs","byte_start":966741,"byte_end":966754,"line_start":80,"line_end":80,"column_start":28,"column_end":41},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3728},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/convert.rs","byte_start":966997,"byte_end":967010,"line_start":88,"line_end":88,"column_start":38,"column_end":51},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3728},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/float.rs","byte_start":968662,"byte_end":968675,"line_start":33,"line_end":33,"column_start":19,"column_end":32},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/float.rs","byte_start":979773,"byte_end":979786,"line_start":424,"line_end":424,"column_start":6,"column_end":19},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":3728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/mantissa.rs","byte_start":1008795,"byte_end":1008810,"line_start":6,"line_end":6,"column_start":21,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":280},"to":{"krate":0,"index":714}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/float/rounding.rs","byte_start":1014949,"byte_end":1014954,"line_start":165,"line_end":165,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":284},"to":{"krate":0,"index":745}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/ftoa/api.rs","byte_start":1034945,"byte_end":1034950,"line_start":71,"line_end":71,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":284},"to":{"krate":0,"index":767}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/itoa/api.rs","byte_start":1085383,"byte_end":1085390,"line_start":46,"line_end":46,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":780},"to":{"krate":0,"index":786}},{"span":{"file_name":"/Users/imac/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.6.7/src/itoa/api.rs","byte_start":1085393,"byte_end":1085408,"line_start":46,"line_end":46,"column_start":34,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":280},"to":{"krate":0,"index":786}}]}